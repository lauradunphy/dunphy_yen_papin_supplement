{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Systems-level metabolic differences associated with antibiotic resistance in *Pseudomonas aeruginosa*\"\nauthor: \"Laura J Dunphy, Phillip Yen, Jason Papin \"\ndate: \"March 29, 2018\"\noutput:\n  html_document: default\n  pdf_document: default\n  word_document: default\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n```{r, message=FALSE, warning=FALSE, result=FALSE, echo=FALSE}\n# Uncomment this to install all required packages:\n# install.packages('readr')\n# install.packages('dplyr')\n# install.packages('ggplot2')\n# install.packages('ggthemes')\n# install.packages('tidyr')\n# install.packages('viridis')\n# install.packages('gridExtra')\n# install.packages('grid')\n# install.packages('knitr')\n# install.packages('reshape2')\n# install.packages('gplots')\n# install.packages('RColorBrewer')\n# install.packages('ggsignif')\n# install.packages('cowplot')\n# install.packages('ggpubr')\n# install.packages('gtable')\n# install.packages('png')\n\n```\n\n\n```{r, message=FALSE, warning=FALSE, result=FALSE, echo=FALSE}\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(tidyr)\nlibrary(viridis)\nlibrary(gridExtra)\nlibrary(grid)\nlibrary(knitr)\nlibrary(reshape2)\nlibrary(gplots)\nlibrary(RColorBrewer)\nlibrary(ggsignif)\nlibrary(cowplot)\nlibrary(ggpubr)\nlibrary(gtable)\nlibrary(png)\n\n```\nMajor changes:\n- switch everything to median and IQR instead of mean and standard dev\n- Changed how max OD600 is calculated\n\n```{r, warning=FALSE,message=FALSE, echo=FALSE, results=FALSE}\n# Load the biolog data (metabolic phenotype data)\nbiologDataPM1<- read_csv(\"biologDataPM1.csv\")\nbiologDataPM2<- read_csv(\"biologDataPM2.csv\")\n```\n\n```{r, warning=FALSE,message=FALSE, echo=FALSE, results=FALSE}\n# Load calculated growth rates, maxLnOD and lag times generated in MATLAB:\nbiologGrowthDynamics <- read_csv(\"biologGrowthDynamics.csv\")\n```\n\n```{r, warning=FALSE,message=FALSE, echo=FALSE, results=FALSE}\n### Load Data Headings\n#These are just dataframes with the names of each carbon source on PM1 and PM2a\nPM1_headers<- read_csv(\"headersPM1.csv\")\nPM2_headers<- read_csv(\"headersPM2.csv\")\nnames(biologDataPM1) <- PM1_headers[1, ]\nnames(biologDataPM2) <- PM2_headers[1, ]\n```\n\n```{r, warning=FALSE,message=FALSE, echo=FALSE, results=FALSE}\n### Tidy the biolog data - adjusted for median but need to redo stats\nbiologPM1Tidy <- biologDataPM1 %>% \n  filter(timePoint<=272) %>% \n  mutate(timePoint = (timePoint-1)*638.4/60/60) %>% # each timepoint is ~638.4 seconds (~10 minutes)\n  gather(\"carbonSource\", \"OD600\",5:100)\n\nbiologPM2Tidy <- biologDataPM2 %>% \n  filter(timePoint<=272) %>% \n  mutate(timePoint = (timePoint-1)*638.4/60/60) %>% \n  gather(\"carbonSource\", \"OD600\",5:100)\n\nbiologAllTidy <- rbind(biologPM1Tidy, biologPM2Tidy)\n\n# Calculate median growth curves (for AUC cutoffs)\nbiologAllStats <- biologAllTidy %>% \n  group_by(strain, plate, timePoint, carbonSource) %>% \n  summarize(medianOD600 = median(OD600), IQ25 = quantile(OD600, 1/4), IQ75 = quantile(OD600, 3/4)) # added median and IQR\n\n# Calculate the Maximum Growth from individual growth curves (see methods)\n     # 1. Subtract the minimum OD600 from each isolate curve from the entire curve\n     biologMinimumSubtracted <- biologAllTidy %>% ungroup() %>% group_by(expID, strain, plate,carbonSource) %>% mutate(minOD600 = min(OD600), minSubtractedOD600 = OD600 - minOD600)\n     \n     # 2. Take the maximum of each min-subtracted isolate curve (stats calculated from this)\n     biologMaximums <- biologMinimumSubtracted %>% ungroup() %>% group_by(expID, strain, plate, carbonSource) %>% summarise(maxOD600 = max(minSubtractedOD600)) %>% filter(carbonSource != 'Negative Control 1', carbonSource != 'Negative Control 2')\n    \n     # 3. Calculate median and IQR of each strain (used for Fig 2-3, S3 Data, growth dynamics)\n     biologMedianMaxOD600 <- biologMaximums %>% \n       ungroup() %>% group_by(strain, plate, carbonSource) %>% summarise(medianMaxOD600 = median(maxOD600))\n\n# Compile and take the median of the growth dynamics (across three biological replicates)\nbiologGrowthDynamicsStats <- biologGrowthDynamics %>% \n  group_by(plate,strain, carbonSource) %>% \n  summarise(medianGrowthRate = median(growthRate), medianLagPhase = median(lagPhase))\n\n# Calculating Growth/No Growth: Grab the negative controls\nNegControl <- biologAllStats %>% \n  ungroup() %>% group_by(plate,strain,timePoint,carbonSource) %>% \n  filter(carbonSource == 'Negative Control 1'|carbonSource == 'Negative Control 2')\n# Duplicate the negative controls at each timepoint 96 times and stack them...arrange in the same way as biologAllStats\nNegControl <- do.call(\"rbind\", replicate(96, NegControl, simplify = FALSE)) %>% arrange(strain, plate, timePoint,carbonSource) \n\n# Calculate the Area under the curve. AUC>=75th percentile will be our official growth cutoff\nbiologAllStats$AUCmedian <- biologAllStats$medianOD600 - NegControl$medianOD600 # median\nbiologAllStats$IQ25 <- biologAllStats$IQ25 - NegControl$medianOD600 # median\nbiologAllStats$IQ75 <- biologAllStats$IQ75 - NegControl$medianOD600 # median\n\n#Filter out negative control wells \nbiologAllStats <- biologAllStats %>% filter(carbonSource != \"Negative Control 1\", carbonSource != \"Negative Control 2\")\n\n# Calculate the Growth/No Growth Cutoff (3rd quantile) \ngrowthCutoff <- as.numeric(biologAllStats %>% group_by(strain, carbonSource) %>% \n  summarise(AUCsum = sum(AUCmedian)) %>% \n  ungroup() %>% summarise(cutoff = quantile(AUCsum,3/4)))\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Filter the growth dynamics data (Figure 3)\n#Select only the carbon sources that support growth on all 5 strains:\n# (AUC>=upper quantile)\n# Note: the maxOD600 took the max of the AUC that way it has subtracted the Negative control at all timepoints\nbiologAllGrowth <- biologAllStats %>%\n  group_by(strain,carbonSource) %>% \n  mutate(AUCsum = sum(AUCmedian)) %>% #changed this to median\n  filter(AUCsum>=growthCutoff) %>% \n  ungroup() %>% group_by(carbonSource,timePoint) %>% \n  mutate(numStrains=n()) %>% \n  filter(numStrains==5) %>% \n  ungroup() %>% group_by(strain, carbonSource) %>% \n  summarise(maxOD600=max(AUCmedian))\n\n#Join these carbon sources with growth dynamics (growth rate and lag phase) to filter down their data frames\nbiologAllGrowthDynamics <- inner_join(biologAllGrowth, biologGrowthDynamicsStats)\nbiologAllGrowthDynamics <- inner_join(biologAllGrowthDynamics, biologMedianMaxOD600)\nbiologAllGrowthDynamics$carbonSource <- factor(biologAllGrowthDynamics$carbonSource, levels = rev(unique(biologAllGrowthDynamics$carbonSource)),ordered = TRUE)\n```\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n# Load Figure 4 data: nuoL on N-acetyl D-Glucosamine data - added median\ngrowthDatGlcNAcRaw <- read_csv(\"growthDataNAG.csv\")\n\n# Take the median across replicates and subtract the median of the negative control (blank) wells\n# growthDatGlcNAc <- growthDatGlcNAcRaw %>%\n#   group_by(strain,timepoint, media) %>% \n#   summarise(medianOD600 = median(OD600), IQ25 = quantile(OD600, 1/4), IQ75 = quantile(OD600, 3/4)) %>% \n#   mutate(carbonSource = 'N-Acetyl-D-Glucosamine')\n\ngrowthDatGlcNAcAllReps <- growthDatGlcNAcRaw %>% group_by(strain,wellID, media, timeTidy) %>%\n  summarise(OD600 = median(data)) %>% filter(media == 'N-Acetyl-D-Glucosamine') # CHANGED THIS TO MEDIAN\n\n# Calculate the distribution of optical maximum densities:\n     # 1. Subtract the minimum OD600 from each isolate curve from the entire curve\ngrowthDatGlcNAcMinimums <- growthDatGlcNAcAllReps %>% ungroup() %>% group_by(strain, wellID, media) %>% filter(media == 'N-Acetyl-D-Glucosamine') %>% summarise(minOD600 = min(OD600))\n     growthDatGlcNAcMinimums <- do.call(\"rbind\", replicate(272, growthDatGlcNAcMinimums, simplify = FALSE))\n     growthDatGlcNAcMinimums <- growthDatGlcNAcMinimums %>% arrange(wellID)\n     growthDatGlcNAcAllReps$minSubtractedOD600 <- growthDatGlcNAcAllReps$OD600 - growthDatGlcNAcMinimums$minOD600\n     \n     # 2. Take the maximum of each min-subtracted isolate curve (stats calculated from this)\n     growthDatGlcNAcMaximums <- growthDatGlcNAcAllReps %>% ungroup() %>% group_by(strain, wellID, media) %>% summarise(maxOD600 = max(minSubtractedOD600)) %>% filter(strain != 'blank')\n     \n     # 3. Calculate median and IQR of each strain (used for plotting Fig 4)\n     growthDatGlcNAcDistribution <- growthDatGlcNAcMaximums %>% \n       ungroup() %>% group_by(strain, media) %>% summarise(medianMaxOD600 = median(maxOD600), IQ25 = quantile(maxOD600, 1/4), IQ75 = quantile(maxOD600, 3/4))\n     growthDatGlcNAcDistribution$strain <- factor(growthDatGlcNAcDistribution$strain, levels =c('Day0Anc','Day20T4','nuoL','blank'))\n\n# Background subtract and calculate median + IQR for growth curves\ngrowthDatGlcNAc <- growthDatGlcNAcAllReps %>% filter(media == \"N-Acetyl-D-Glucosamine\") %>% \n  ungroup() %>% group_by(strain, media, timeTidy) %>% summarise(medianOD600 = median(OD600), IQ25 = quantile(OD600, 1/4), IQ75 = quantile(OD600,3/4)) %>% mutate(carbonSource = \"N-Acetyl-D-Glucosamine\")\n\ngrowthDatGlcNAcNegControl <- growthDatGlcNAc %>% filter(strain =='blank')\ngrowthDatGlcNAcNegControl <- do.call(\"rbind\",replicate(4,growthDatGlcNAcNegControl,simplify = FALSE))\n\ngrowthDatGlcNAc$AUCmedian <- growthDatGlcNAc$medianOD600 - growthDatGlcNAcNegControl$medianOD600\n# subtract median from the interquartile ranges to shift them down by an equal amount\ngrowthDatGlcNAc$IQ25 <- growthDatGlcNAc$IQ25 - growthDatGlcNAcNegControl$medianOD600\ngrowthDatGlcNAc$IQ75 <- growthDatGlcNAc$IQ75 - growthDatGlcNAcNegControl$medianOD600\n\n\n\n# Factor the strains\ngrowthDatGlcNAc$strain <- factor(growthDatGlcNAc$strain, levels = c('Day0Anc','Day20T4','nuoL','blank'))\n\n```\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n## Figure 5 Data - adjusted for median\n# Load the predictions and PIP deletion data\n\n# PIP mutations (via WGS in Yen and Papin 2017)\npipRMutations <- read_csv(\"mutationsPIP.csv\")\n# Essentiality predictions from model\nessentialityPredictionsRaw <- read_csv(\"geneEssentialityPredictions.csv\")\n\n## Tidy the data\n\n# 1. Growth rate ratios from all gene essentiality predictions. Gr < 0.001 1 means gene is essential\nessentialityPredictions <- essentialityPredictionsRaw %>% gather(\"carbonSource\",\"grRatio\", -gene)\n# Filter out carbon sources for which the model could not grow in the first place (i.e. there will be NAs for grRatio)\n# Also filter out unassigned/SPONTANEOUS model artifacts\nessentialityPredictions <- essentialityPredictions %>% filter(grRatio != Inf, grRatio != 'NaN', grRatio != '#NAME?') %>% filter(gene != 'Unassigned', gene != 'SPONTANEOUS', gene != 'unassigned')\n\n# 2. All genes in model and whether or not they were mutated in PipR (1 = mutated)\nPipRMutationBinary <- essentialityPredictions %>%  select(gene) %>% unique() %>% group_by(gene) %>% mutate(geneCount = n())\npipRMutations <- pipRMutations %>% unique() %>% group_by(Day20P1) %>% mutate(gene = Day20P1, geneCount = n()) %>% ungroup() %>% select(-Day20P1)\nPipRMutationsBinary <- left_join(PipRMutationBinary, pipRMutations, 'gene') # fixed this to use only genes in the model!!\nPipRMutationsBinary$geneCount.y[is.na(PipRMutationsBinary$geneCount.y)] <- 0\nPipRMutationsBinary <- PipRMutationsBinary %>% ungroup() %>% group_by(gene) %>% mutate(isMutated = geneCount.y != 0, strain = 'Day20P1') \n\nPipRMutationsMutated <- PipRMutationsBinary %>% filter(isMutated == TRUE)\nessentialityPredictionsMutated <- left_join(PipRMutationsMutated, essentialityPredictions, 'gene')\n\n# 3. Growth calls for PIP and Ancestor on carbon sources in the model\nbiologPipStats <- biologAllStats %>% \n  filter(strain == 'Day20P1' | strain == 'Day0Anc') %>% \n  group_by(carbonSource,strain) %>% \n  summarise(AUCsum = sum(AUCmedian)) #changed to median\nmodelCarbonSources <- essentialityPredictions %>% select(carbonSource) %>% unique()\nbiologPipStats <- inner_join(biologPipStats, modelCarbonSources, 'carbonSource')\nbiologPipStats$strain <- factor(biologPipStats$strain, levels=c('Day20P1','Day0Anc'))\ncarbonSourceLevels = c('4-Hydroxy Benzoic Acid', 'D-Alanine','Inosine','L-Alanine','L-Leucine','L-Ornithine','Malonic Acid','Adenosine','D-Malic Acid','D-Ribose','D-Serine','D,L-alpha-Glycerol Phosphate','Glycine','L-Phenylalanine','L-Serine','L-Threonine','2-Aminoethanol','Acetic Acid','alpha-D-Glucose','alpha-Keto-Glutaric Acid','Citric Acid','D-Fructose','D-Gluconic Acid','D-Mannitol','Fumaric Acid','gamma-Amino Butyric Acid','Glycerol','Itaconic Acid','L-Arginine','L-Asparagine','L-Aspartic Acid','L-Glutamic Acid','L-Glutamine','L-Histidine','L-Isoleucine','L-Lactic Acid','L-Malic Acid','L-Proline','Putrescine','Pyruvic Acid','Succinic Acid')\nbiologPipStats$carbonSource <- factor(biologPipStats$carbonSource, levels = carbonSourceLevels )\n\n# 4. Filter to only include genes that are mutated in PIP that are essential on at least one carbon source\nessentialityPredictionsMutated <- essentialityPredictionsMutated %>% mutate(isEssential = as.numeric(grRatio) <= 0.001) %>% \n  ungroup() %>% group_by(gene) %>% mutate(isEverEssential = sum(isEssential)) %>% \n  filter(isEverEssential >= 1)\n\nessentialityPredictionsMutated$geneName <- factor(essentialityPredictionsMutated$geneName,levels=sort(unique(essentialityPredictionsMutated$geneName),decreasing=TRUE))\n\nessentialityPredictionsMutated$isEssential <- factor(essentialityPredictionsMutated$isEssential, levels =c(TRUE,FALSE), labels = c('x',''))\n\nessentialityPredictionsMutated$carbonSource <- factor(essentialityPredictionsMutated$carbonSource, levels = carbonSourceLevels)\n\n\n```\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n# Figure 6 L-Leucine/4-HBA Data - adjusted for median but technical reps were averages (higher n)\n# Load the data\n\n# 6C Data Biological replicates 1-4 of ancestor, PIP and gnyA grown in 40mM L-leucine\nancP1gnyAGrowthRaw <- read_csv(\"growthDataLeucine.csv\")\n\n\n# All 4 replicates of Leucine/Isoleucne Anc/Pip/gnyA for figure 6C\nancP1gnyAGrowthAllReps <- ancP1gnyAGrowthRaw %>% group_by(strain,wellID, media, timeTidy) %>%\n  summarise(OD600 = median(data)) # CHANGED THIS TO MEDIAN\n\n# Calculate the distribution of optical maximum densities:\n     # 1. Subtract the minimum OD600 from each isolate curve from the entire curve\nancP1gnyAMinimums <- ancP1gnyAGrowthAllReps %>% ungroup() %>% group_by(strain, wellID, media) %>% filter(media == 'L-Leucine') %>% summarise(minOD600 = min(OD600))\n     ancP1gnyAMinimums <- do.call(\"rbind\", replicate(272, ancP1gnyAMinimums, simplify = FALSE))\n     ancP1gnyAMinimums <- ancP1gnyAMinimums %>% arrange(wellID)\n     ancP1gnyAGrowthLeucine <- ancP1gnyAGrowthAllReps %>% filter(media == 'L-Leucine')\n     ancP1gnyAGrowthLeucine$minSubtractedOD600 <- ancP1gnyAGrowthLeucine$OD600 - ancP1gnyAMinimums$minOD600\n     \n     # 2. Take the maximum of each min-subtracted isolate curve (stats calculated from this)\n      ancP1gnyAMaximums <- ancP1gnyAGrowthLeucine %>% ungroup() %>% group_by(strain, wellID, media) %>% summarise(maxOD600 = max(minSubtractedOD600)) %>% filter(strain != 'blank')\n     \n      # 3. Calculate median and IQR of each strain (used for plotting Fig 6C)\nancP1gnyADistribution <- ancP1gnyAMaximums %>% \n       ungroup() %>% group_by(strain, media) %>% summarise(medianMaxOD600 = median(maxOD600), IQ25 = quantile(maxOD600, 1/4), IQ75 = quantile(maxOD600, 3/4))\n     ancP1gnyADistribution$strain <- factor(ancP1gnyADistribution$strain, levels=c('Day0Anc','Day20P1','gnyA','blank'))\n     #### NEED TO ADJUST FIGURE\n     \n      \n# Background subtract and calculate median + IQR for growth curves (Fig S6)\nancP1gnyAGrowth <- ancP1gnyAGrowthAllReps %>% \n  ungroup() %>% group_by(strain, media, timeTidy) %>% summarise(medianOD600 = median(OD600), IQ25 = quantile(OD600, 1/4), IQ75 = quantile(OD600,3/4))\n\n# All 4 replicates of Leucine/Isoleucine Anc/Pip/gnyA for Figure 6C after blank background subtraction \nancP1gnyANegControl <- ancP1gnyAGrowth %>% filter(strain == 'blank')\nancP1gnyANegControl <- do.call(\"rbind\", replicate(7, ancP1gnyANegControl, simplify = FALSE)) \nancP1gnyAGrowth$AUCmedian <- ancP1gnyAGrowth$medianOD600 - ancP1gnyANegControl$medianOD600\nancP1gnyAGrowth$IQ25 <- ancP1gnyAGrowth$IQ25 - ancP1gnyANegControl$medianOD600\nancP1gnyAGrowth$IQ75 <- ancP1gnyAGrowth$IQ75 - ancP1gnyANegControl$medianOD600\n\n\nancP1gnyAGrowth$strain <- factor(ancP1gnyAGrowth$strain, levels=c('Day0Anc','Day20P1','gnyA','blank'))\n\n### 6D Data Biological Replicates 1+2 and 3+4 of scoA/scoB on 4HBA\nancP1scoAB1 <- read_csv(\"growthData4HBA_1.csv\")\nancP1scoAB2 <- read_csv(\"growthData4HBA_2.csv\")\n\n# Merge all 4 replicates on 4HBA together:\nancP1scoAB12 <- rbind(ancP1scoAB1,ancP1scoAB2)\nancP1scoAB12_AllReps <- ancP1scoAB12 %>% filter(media == '4-Hydroxybenzoic Acid') %>% group_by(strain, wellID, media, timeTidy) %>% summarise(OD600 = median(data)) #CHANGED TO MEDIAN\n\n# Calculate the distribution of optical maximum densities:\n     # 1. Subtract the minimum OD600 from each isolate curve from the entire curve\nancP1scoABMinimums <- ancP1scoAB12_AllReps %>% ungroup() %>% group_by(strain, wellID, media) %>% filter(media == '4-Hydroxybenzoic Acid') %>% summarise(minOD600 = min(OD600))\n     ancP1scoA2Minimums <- do.call(\"rbind\", replicate(272, ancP1scoABMinimums, simplify = FALSE))\n     ancP1scoABMinimums <- ancP1scoABMinimums %>% arrange(wellID)\n     ancP1scoAB12_AllReps$minSubtractedOD600 <- ancP1scoAB12_AllReps$OD600 - ancP1scoABMinimums$minOD600\n     \n     # 2. Take the maximum of each min-subtracted isolate curve (stats calculated from this)\n     ancP1scoABMaximums <- ancP1scoAB12_AllReps %>% ungroup() %>% group_by(strain, wellID, media) %>% summarise(maxOD600 = max(minSubtractedOD600)) %>% filter(strain != 'blank')\n     \n     # 3. Calculate median and IQR of each strain (used for plotting Fig 6D)\n     ancP1scoABDistribution <- ancP1scoABMaximums %>% \n       ungroup() %>% group_by(strain, media) %>% summarise(medianMaxOD600 = median(maxOD600), IQ25 = quantile(maxOD600, 1/4), IQ75 = quantile(maxOD600, 3/4))\n     ancP1scoABDistribution$strain <- factor(ancP1scoABDistribution$strain, levels=c('Day0Anc','Day20P1','scoA','scoB','blank'))\n     #### NEED TO ADJUST FIGURE\n     \n# Background subtract and calculate median + IQR for growth curves (Fig S6)\nancP1scoABGrowth <- ancP1scoAB12_AllReps %>% ungroup() %>% group_by(strain, media, timeTidy) %>% summarise(medianOD600 = median(OD600), IQ25 = quantile(OD600, 1/4), IQ75 = quantile(OD600, 3/4))\n\n# All 4 replicates on 4HBA after blank background subtraction:\nancP1scoABNegControl <- ancP1scoABGrowth %>% filter(strain =='blank')\nancP1scoABNegControl <- do.call(\"rbind\",replicate(5,ancP1scoABNegControl,simplify = FALSE))\nancP1scoABGrowth$AUCmedian <- ancP1scoABGrowth$medianOD600 - ancP1scoABNegControl$medianOD600\nancP1scoABGrowth$IQ25 <- ancP1scoABGrowth$IQ25 - ancP1scoABNegControl$medianOD600\nancP1scoABGrowth$IQ75 <- ancP1scoABGrowth$IQ75 - ancP1scoABNegControl$medianOD600\n\nancP1scoABGrowth$strain <- factor(ancP1scoABGrowth$strain, levels=c('Day0Anc','Day20P1','scoA','scoB','blank'))\n\n```\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n# Figure 7 Data - Hocquet Isolate Experiment\n# Grew AWT, BWT, CWT, DWT, APM, BPM, CPM, DPM on 40mM of L-Leucine\n\n# Load the data\nhocquetGrowthRaw_1 <- read_csv(\"growthDataHocquet_1.csv\") # 5/31/18; 40mM\nhocquetGrowthRaw_2 <- read_csv(\"growthDataHocquet_2.csv\") # 6/3/18; 40mM\n\n# Quality control plots\n# hocquetGrowthRaw_3 %>% filter(media == 'LB') %>% ggplot(aes(timeTidy, data))+geom_line(aes(color = strain))+facet_wrap(~wellID)\n# hocquetGrowthRaw_3 %>% filter(media == 'L-Leucine') %>% ggplot(aes(timeTidy, data))+ geom_line(aes(color = strain))+facet_grid(wellID~replicate)\n\n# Merge all replicates together: (once i have 3+4)\nhocquetGrowth_1_2 <- rbind(hocquetGrowthRaw_1,hocquetGrowthRaw_2)\n\n\n# Take the median across technical replicates\nhocquetGrowthRepMedian <- hocquetGrowth_1_2 %>% group_by(strain, wellID, family, media, timeTidy) %>% summarise(OD600 = median(data)) %>% filter(media == 'L-Leucine') # changed this to median\n\n# Calculate the distribution of optical maximum densities:\n     # 1. Subtract the minimum OD600 from each isolate curve from the entire curve\n     hocquetGrowthRepMinimums <- hocquetGrowthRepMedian %>% ungroup() %>% group_by(strain, wellID, family, media) %>% filter(media == 'L-Leucine') %>% summarise(minOD600 = min(OD600))\n     hocquetGrowthRepMinimums <- do.call(\"rbind\", replicate(272, hocquetGrowthRepMinimums, simplify = FALSE))\n     hocquetGrowthRepMinimums <- hocquetGrowthRepMinimums %>% arrange(wellID)\n     hocquetGrowthRepMedian$minSubtractedOD600 <- hocquetGrowthRepMedian$OD600 - hocquetGrowthRepMinimums$minOD600\n     \n     # 2. Take the maximum of each min-subtracted isolate curve (stats calculated from this)\n     hocquetGrowthRepMaximums <- hocquetGrowthRepMedian %>% ungroup() %>% group_by(strain, wellID, family, media) %>% summarise(maxOD600 = max(minSubtractedOD600)) %>% filter(strain != 'blank')\n     \n     # 3. Calculate median and IQR of each strain (used for plotting Fig 7)\n     hocquetGrowthRepDistribution <- hocquetGrowthRepMaximums %>% \n       ungroup() %>% group_by(strain, family) %>% summarise(medianMaxOD600 = median(maxOD600), IQ25 = quantile(maxOD600, 1/4), IQ75 = quantile(maxOD600, 3/4))\n     hocquetGrowthRepDistribution$strain <- factor(hocquetGrowthRepDistribution$strain, levels =c(\"AWT\",\"APM\", \"BWT\",\"BPM\", \"CWT\",\"CPM\",\"DWT\",\"DPM\"))\n\n```\n\n```{r, warning=FALSE, message=FALSE, echo=FALSE}\n# Data for Supplementary Figures: S3, S4, and S6\n# S3 and S4 left as median of technical replicates\n# S6 median and IQR across isolates\n\n# S3 Fig. Growth of all 4 biological replicates of TOB-evolved PA14 from Yen and Papin, 2017\nS3_fig_data <- read_csv('growthDataGlcNAc_supplementalLineages.csv')\nS3_fig_growth <- S3_fig_data %>% \n  filter(wellID != 'border') %>% \n  group_by(strain, wellID, timeTidy,media) %>% \n  summarise(OD600 = median(data), IQ25 = quantile(data, 1/4), IQ75 = quantile(data,3/4))\nS3_negControl <- S3_fig_growth %>% filter(wellID == 'blank')\nS3_negControl <- do.call(\"rbind\",replicate(7,S3_negControl, simplify=FALSE))\nS3_fig_growth$AUC <- S3_fig_growth$OD600 - S3_negControl$OD600\nS3_fig_growth$IQ25 <- S3_fig_growth$IQ25 - S3_negControl$OD600\nS3_fig_growth$IQ75 <- S3_fig_growth$IQ75 - S3_negControl$OD600\nS3_fig_growth$wellID <- factor(S3_fig_growth$wellID, levels=c('Day0Anc_1','Day20T1_1','Day20T2_1','Day20T3_1','Day20T4_1', 'Day20T4_2','blank'), labels=c('Ancestor','TOB-R1','TOB-R2','TOB-R3','TOB-R4','TOB-R4 2','Negative Control'))\n\n# S4 Fig. Ancestor growth with varying concentrations of the electron transport chain inhibitor CCCP \nS4_fig_data <- read_csv('growthDataGlcNAc_CCCP.csv')\nS4_fig_growth <- S4_fig_data %>% \n  filter(wellID != 'border') %>% \n  group_by(strain, wellID, timeTidy,media) %>% \n  summarise(OD600 = median(data), IQ25 = quantile(data, 1/4), IQ75 = quantile(data,3/4))\nS4_negControl <- S4_fig_growth %>% filter(wellID == 'blank')\nS4_negControl <- do.call(\"rbind\",replicate(7,S4_negControl, simplify=FALSE))\nS4_fig_growth$AUC <- S4_fig_growth$OD600 - S4_negControl$OD600\nS4_fig_growth$IQ25 <- S4_fig_growth$IQ25 - S4_negControl$OD600\nS4_fig_growth$IQ75 <-S4_fig_growth$IQ75 - S4_negControl$OD600\nS4_fig_growth$wellID <- factor(S4_fig_growth$wellID, levels=c('Day0Anc_NC','Day0Anc_DMSO','Day0Anc_CCCP','nuoL_NC','nuoL_DMSO','nuoL_CCCP','blank'),labels = c('Ancestor - 0uM CCCP, 0% DMSO','Ancestor - 0uM CCCP, 0.125% DMSO','Ancestor - 12.5uM CCCP, 0.125% DMSO','nuoL - 0uM CCCP, 0% DMSO','nuoL - 0uM CCCP, 0.125% DMSO','nuoL - 12.5uM CCCP, 0.125% DMSO','Negative Control'))\n\n\n\n# S6 Fig. Growth of gnyA mutant on 20mM L-Isoleucine \nS6_fig_data <- read_csv('growthDataIsoleucine_gnyA.csv')\nS6_fig_data <- S6_fig_data %>% filter(strain != 'border') %>% \n  separate(wellID, c(\"biologicalRep\",\"technicalRep\"),'_') %>% \n  group_by(strain, biologicalRep, timeTidy) %>% \n  summarise(OD600 = median(data)) # CHANGED to MEDIAN\nS6_fig_growth <- S6_fig_data %>% \n  ungroup() %>% group_by(strain, timeTidy) %>% \n  summarise(medianOD600 = median(OD600), IQ25 = quantile(OD600, 1/4), IQ75 = quantile(OD600, 3/4))\nS6_negControl <- S6_fig_growth %>% filter(strain == 'blank')\nS6_negControl <- do.call(\"rbind\",replicate(2,S6_negControl,simplify = FALSE))\nS6_fig_growth$AUCmedian <- S6_fig_growth$medianOD600 - S6_negControl$medianOD600\nS6_fig_growth$IQ25 <- S6_fig_growth$IQ25 - S6_negControl$medianOD600\nS6_fig_growth$IQ75 <- S6_fig_growth$IQ75 - S6_negControl$medianOD600\n\nS6_fig_growth$strain <- factor(S6_fig_growth$strain, levels=c('gnyA','blank'), labels=c('gnyA','Negative Control'))\n\n\n# S6 Fig D -> growth of clinical isolates on 40mM L-leucine\n# Calculate the median and IQR across isolates for supplmental growth curves\nhocquetGrowth <- hocquetGrowthRepMedian %>% \n  ungroup() %>% group_by(strain, family, media, timeTidy) %>% filter(media == 'L-Leucine') %>%  summarise(medianOD600 = median(OD600), IQ25 = quantile(OD600, 1/4), IQ75 = quantile(OD600,3/4))\n\n# Background subtractions (L-Leucine no bacteria)\nhocquetNegControl <- hocquetGrowth %>% filter(strain =='blank')\nhocquetNegControl <- do.call(\"rbind\",replicate(9,hocquetNegControl,simplify = FALSE))\nhocquetGrowth$AUCmedian <- hocquetGrowth$medianOD600 - hocquetNegControl$medianOD600\nhocquetGrowth$IQ25 <- hocquetGrowth$IQ25 - hocquetNegControl$medianOD600\nhocquetGrowth$IQ75 <- hocquetGrowth$IQ75 - hocquetNegControl$medianOD600\n\n# Factor the strains\nhocquetGrowth$strain <- factor(hocquetGrowth$strain, levels =c(\"AWT\",\"APM\", \"BWT\",\"BPM\", \"CWT\",\"CPM\",\"DWT\",\"DPM\", \"blank\"), labels = c(\"AWT\",\"APM\", \"BWT\",\"BPM\", \"CWT\",\"CPM\",\"DWT\",\"DPM\", \"Negative Control\"))\n\n\n\n\n```\n## **Figures**\nNote: Fig 1 and S7 Fig are not included in this document, but their figure captions are provided below.\n\n**Fig 1. Schematic of phenotypic profiling of antibiotic-resistant *Pseudomonas aeruginosa*.** (A) *P. aeruginosa* strain UCBPP-PA14 was previously adaptively evolved to three antibiotics (ciprofloxacin (CIP), piperacillin (PIP), or tobramycin (TOB)) or to LB media without drug (LBE) for 20 days. Growth of each evolved lineage was profiled by measuring the optical density at 600nm (OD600) of each lineage after inoculation on 190 unique carbon sources for 48-hours. Phenotypic data was used to calculate changes in growth dynamics. (B) Phenotypic data and previously collected whole-genome sequencing data were paired with a genome-scale metabolic network reconstruction of *P. aeruginosa* UCBPP-PA14 to predict mutations impacting loss of catabolic function in our piperacillin-evolved lineage. In brief, the model was used to predict the individual impact of each gene that was deleted from the piperacillin-evolved lineage on the ability to grow on a given carbon source. If a simulated gene knockout resulted in a loss of model growth on a carbon source where an experimental loss of catabolic function was also observed, then the prediction was experimentally validated with a transposon mutant. This process was repeated for the piperacillin-evolved lineage on 41 carbon sources that could be both experimentally and computationally evaluated. \n\n\n\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE,results=TRUE,fig.align='center'}\n# Generate Figure 2\n# Changed to Median throughout \n# Fig2A unclustered \n# Binary growth is plotted by carbonSource alphabetically\nFig2Adat <- biologAllStats %>% \n  group_by(strain, carbonSource) %>% \n  summarise(AUCsum=sum(AUCmedian)) %>% \n  mutate(growth = AUCsum>=growthCutoff) \nFig2Adat$strain <-  factor(Fig2Adat$strain, levels = rev(unique(Fig2Adat$strain)),ordered=TRUE)\nFig2A <- Fig2Adat %>% ggplot(aes(carbonSource, strain))+\n  geom_tile(aes(fill=growth), color='black',size = 0.25)+\n  xlab(\"Carbon Sources\")+ theme_bw() + \n  theme(axis.ticks.x=element_blank(),\n        legend.title=element_blank(),legend.position='top',axis.title.y=element_blank(),\n        axis.title.x = element_text(margin = margin(t = -0.8, r = 0, b = 0, l = 0))) +\n  scale_fill_manual(labels = c(\"No Growth  \", \"Growth\"),values=c(\"white\",\"grey50\"))+\n  scale_y_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n        labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))\n\n# Figure 2B\nFig2B <- biologAllStats %>% \n  group_by(strain, carbonSource) %>% \n  summarise(AUCsum=sum(AUCmedian), growth = sum(AUCmedian)>=growthCutoff) %>% \n  ggplot(aes(AUCsum)) + geom_histogram(breaks=seq(-29, 101, by = 2),aes(fill = growth),color='black')+theme_bw()+\n  theme(legend.position = 'none')+\n  geom_vline(xintercept=c(growthCutoff), linetype=\"dotted\", size=1.25)+xlab(\"Area Under the Curve \\n (AUC)\")+ylab('Count')+\n  scale_fill_manual(values=c('white','grey50'))\n\n\n# Figure 2C\nFig2CDat <-biologAllStats %>% \n  ungroup() %>% group_by(strain,carbonSource) %>% \n  filter(sum(AUCmedian)>=growthCutoff) %>% \n  summarize(maxOD600 = max(AUCmedian))\nFig2CDat <- inner_join(Fig2CDat, biologMedianMaxOD600)\n\n# Figure 2C New\nFig2C <- Fig2CDat %>% \n  ggplot(aes(x=strain, y = medianMaxOD600))+\n  geom_boxplot(size=1.25, aes(color = strain))+\n  geom_signif(comparisons=list(c(\"Day0Anc\", \"Day20C2\"), c(\"Day0Anc\",\"Day20F4\"), c(\"Day0Anc\",\"Day20P1\"),c(\"Day0Anc\",\"Day20T3\")), annotations=c(\"*\",\"***\",\"***\",\"***\"), tip_length = 0, y_position = c(0.65, 0.72, 0.79,0.86))+\n  scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"))+\n  theme_bw()+ ylim(0,0.90)+\n   scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n        labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))+\n  theme(axis.text.y = element_text(size=10),axis.text.x=element_text(angle=45,hjust=1), axis.title.x=element_blank(), axis.title.y=element_text(size=12),legend.position=\"none\")+ylab('Max Growth (OD600)')\n\n\n# Figure 2D\nFig2D <- biologAllStats %>% \n  group_by(strain, carbonSource) %>% \n  summarise(AUCsum=sum(AUCmedian)) %>% \n  mutate(growth = AUCsum>=growthCutoff) %>% \n  filter(growth == TRUE) %>% \n  ggplot(aes(x = strain))+geom_bar(aes(y=((..count..)/190)*100), fill='grey50',color='black')+\n  ylab('% Growth Supporting \\n Carbon Sources') + theme_bw() + ylim(0, 50)+\n  theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=45,hjust=1))+\n  scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n        labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))\n\nFig2DNumbers <- biologAllStats %>% \n  group_by(strain, carbonSource) %>% \n  summarise(AUCsum=sum(AUCmedian)) %>% \n  mutate(growth = AUCsum>=growthCutoff) %>% \n  filter(growth == TRUE) %>% \n  summarise(percentGrowth = (n()/190)*100,numGrowth = n())\n\nFig2Legend <- get_legend(Fig2A)\n\n```\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE, fig.height=5, fig.width=7.5, fig.align='center'}\n#Arrange, plot and save Figure 2:\n\nFigure2 <- arrangeGrob(Fig2B, Fig2C,Fig2A+theme(legend.position = 'none', axis.text.x = element_blank()),Fig2D,Fig2Legend, nrow=4,ncol=3, layout_matrix=cbind(c(5,3,NA,1), c(5,3,NA,2),c(5,3,NA,4)), heights=c(10,75,5,110), widths=c(30,30,30))\n\nFigure2 <- as_ggplot(Figure2) + draw_plot_label(label = c(\"A\",\"B\",\"C\",\"D\"), size = 15, x = c(0, 0, 0.33, 0.67), y = c(1, 0.57,0.57,0.57))\n\nFigure2\nggsave('Figures and Data/Fig2.pdf',plot = Figure2, width = 7.5, height = 5, units=\"in\",dpi=400)\n\n\n```\n\n**Fig 2. Summary of phenotypic growth data of antibiotic-resistant *P. aeruginosa*.** (A) Binary growth calls for each lineage (Ancestor, LBE = LB-Evolved, CIP = ciprofloxacin-resistant, PIP = piperacillin-resistant,TOB = tobramycin-resistant) across 190 unique carbon sources (white = no growth, grey = growth). (B) Histogram of the area under the curve (AUC) for all measured growth curves. A lineage was considered to have grown on a given carbon source if the AUC of the 48-hour growth curve was in the upper quantile. The growth/no growth cutoff is indicated by a dotted line. (C) Boxplot summarizes the maximum growth density by lineage across all carbon sources for which each lineage grew. Growth density was measured as the OD600 after subtraction of a negative control. Boxes encompass the 25th to 75th percentiles of each population. Whiskers extend up to 1.5 times the interquartile range from the closest box boundary. Data points that are out of the whisker range are outliers and are denoted by individual points. Significance denoted by Wilcoxon rank sum test (&#42;&#42;&#42;P-value < 0.001). (D) Summary of the percent of total carbon sources that supported growth of each lineage.\n\n\n``` {r, echo=FALSE, message=FALSE, warning=FALSE}\n# Generate Figure 3\n\n# Figure 3A\n# Fig3A <- biologAllGrowthDynamics %>% \n#   ggplot(aes(x=strain, y=carbonSource)) +\n#   geom_tile(aes(fill = maxOD600), color='white')+\n#   xlab(\"\")+ylab(\"\")+theme_bw() +theme(axis.text.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), legend.position=\"top\", legend.title=element_text(size=8)) + guides(fill = guide_colorbar(title.position = \"top\",title.hjust = 0.5, title = 'Max Growth \\n (OD600)'))+\n#   scale_fill_gradient(low = \"grey95\", high = \"black\")+\n#   scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n#         labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))\n\n# New Fig 3A\nFig3A <- biologAllGrowthDynamics %>% \n  ggplot(aes(x=strain, y=carbonSource)) +\n  geom_tile(aes(fill = medianMaxOD600), color='white')+\n  xlab(\"\")+ylab(\"\")+theme_bw() +theme(axis.text.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), legend.position=\"top\", legend.title=element_text(size=8)) + guides(fill = guide_colorbar(title.position = \"top\",title.hjust = 0.5, title = 'Max Growth \\n (OD600)'))+\n  scale_fill_gradient(low = \"grey95\", high = \"black\")+\n  scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n        labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))\n\n# Figure 3B\nFig3B <- biologAllGrowthDynamics %>% \n  ggplot(aes(x=strain, y=carbonSource)) +\n  geom_tile(aes(fill = medianGrowthRate), color='white')+\n  xlab(\"\")+ylab(\"\")+theme_bw() +  theme(axis.text.y = element_blank(), legend.position=\"top\", axis.text.x = element_text(angle = 45, hjust = 1), legend.title=element_text(size=8)) + guides(fill = guide_colorbar(title.position = \"top\",title.hjust = 0.5, title = 'Growth Rate \\n (ln(OD600)/hr)',label.hjust=0.6))+\n  scale_fill_gradient(low = \"grey95\", high = \"black\")+\n  scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n        labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))\n\n# Figure 3C\nFig3C <- biologAllGrowthDynamics %>% \n  ggplot(aes(x=strain, y=carbonSource)) +\n  geom_tile(aes(fill = medianLagPhase), color='white')+\n  xlab(\"\")+ylab(\"\")+ theme_bw() +theme(axis.text.y = element_blank(), legend.position=\"top\", axis.text.x = element_text(angle = 45, hjust = 1), legend.title=element_text(size=8)) +guides(fill = guide_colorbar( title.position = \"top\",title.hjust = 0.5, title = 'Time to Mid-Exp \\n (hr)'))+\n  scale_fill_gradient(low = \"grey95\", high = \"black\", trans='log10')+\n  scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n        labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))\n\n# New 3D (medianMaxOD600)\nFig3D <- biologAllGrowthDynamics %>% \n  ggplot(aes(x=strain, y = medianMaxOD600))+\n  geom_boxplot(aes(color = strain), size=1.25) + \n  geom_signif(comparisons=list(c(\"Day0Anc\", \"Day20C2\"), c(\"Day0Anc\", \"Day20F4\"), c(\"Day0Anc\",\"Day20P1\")), annotations=c(\"**\", \"**\",\"**\"), tip_length = 0, y_position = c(0.52, 0.565,0.610))+\n  scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"),labels=c(\"Ancestor\",\"LBE\",\"CIP\",\"PIP\",\"TOB\"))+\n  theme_bw()+\n  theme(axis.text.y = element_text(size=10), axis.title.y=element_text(size=12),legend.position=\"bottom\",legend.title=element_blank(), axis.text.x = element_blank())+xlab(\"\")+ylim(0,0.62)+ylab('Max Growth (OD600)')\n\n# Figure 3E\nFig3E <- biologAllGrowthDynamics %>% \n  ggplot(aes(x=strain, y = medianGrowthRate))+\n  geom_boxplot(aes(color = strain), size=1.25)+\n  geom_signif(comparisons=list(c(\"Day0Anc\", \"Day20F4\"), c(\"Day0Anc\",\"Day20P1\"), c(\"Day0Anc\",\"Day20T3\")), annotations=c(\"***\",\"***\",\"**\"), tip_length = 0, y_position = c(0.425, 0.465, 0.505))+\n  scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"))+\n  theme_bw()+\n  theme(axis.text.y = element_text(size=10), axis.title.y=element_text(size=12),legend.position=\"none\", axis.text.x = element_blank())+xlab(\"\")+ylab('Growth Rate (ln(OD600)/hr)')+ylim(0,0.525)\n\n# Figure 3F\nFig3F <- biologAllGrowthDynamics %>% \n  ggplot(aes(x=strain, y = medianLagPhase))+\n  geom_boxplot(aes(color = strain), size=1.25)+\n  geom_signif(comparisons=list(c(\"Day0Anc\",\"Day20P1\"), c(\"Day0Anc\",\"Day20F4\")), annotations = c('***','**'), tip_length = 0, y_position = c(1.95, 1.75))+\n  scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"))+\n  theme_bw()+ scale_y_log10(limits=c(NA,100)) + \n  theme(axis.text.y = element_text(size=10), axis.title.y=element_text(size=12),legend.position=\"none\", axis.text.x = element_blank())+xlab(\"\")+ylab(\"Time to Mid-Exponential (hr)\")\n\nlegend_3DEF <- get_legend(Fig3D)\n\n```\n\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.height=8.5, fig.width=7.5, fig.align='center'}\n# Arrange, plot, and save Figure 3\n\n# Need to do the below steps to get all subpanels to be the same widths\n gA <- ggplotGrob(Fig3A+theme(axis.text.y = element_blank()))\n gB <- ggplotGrob(Fig3B)\n gC <- ggplotGrob(Fig3C)\n gD <- ggplotGrob(Fig3D+theme(legend.position='none'))\n gE <- ggplotGrob(Fig3E)\n gF <- ggplotGrob(Fig3F)\n maxWidth = grid::unit.pmax(gA$widths[2:5], gB$widths[2:5],gC$widths[2:5], gD$widths[2:5],gE$widths[2:5], gF$widths[2:5])\n\n gA$widths[2:5] <- as.list(maxWidth)\n gB$widths[2:5] <- as.list(maxWidth)\n gC$widths[2:5] <- as.list(maxWidth)\n gD$widths[2:5] <- as.list(maxWidth)\n gE$widths[2:5] <- as.list(maxWidth)\n gF$widths[2:5] <- as.list(maxWidth)\n\n \n # Labels for each row in Figures 3A-C\n carbonSourceLabels <- biologAllGrowthDynamics %>%\n   ungroup() %>% \n   select(carbonSource) %>% \n   unique() %>% \n   ggplot() +\n   geom_rect(aes(ymin = 1, ymax = length(carbonSource)*.8,xmin = 0.35, xmax = 0.5),fill='white')+\n   geom_text(aes(x=c(0.5),y=c((1:length(carbonSource))*0.635+0.001),label=rev(carbonSource),hjust=1))+\n   theme(axis.line.x=element_line(color='white'),axis.title.x=element_blank(),axis.title.y=element_blank(),axis.ticks=element_blank(),axis.line.y=element_line(color='white'),legend.position='none',plot.margin=unit(c(0,-1.5,1.5,0),'cm'), axis.text.x=element_blank(),axis.text.y=element_blank())\n \n # Arrange the subpanels \n Fig3 <- arrangeGrob(gA, gB,gC,gD,gE,gF,legend_3DEF,carbonSourceLabels, ncol=4, nrow =3, heights=c(98, 52, 5), layout_matrix=cbind(c(8,NA,NA),c(1,4,7),c(2,5,7), c(3,6,7)))\n\n Figure3 <- as_ggplot(Fig3) +                                # transform to a ggplot\n  draw_plot_label(label = c(\"A\", \"B\", \"C\",\"D\",\"E\",\"F\"), size = 15,\n                  x = c(0.25, 0.5, .75, 0.25, 0.5,0.75), y = c(1, 1,1,0.4,0.4,0.4))\n Figure3\n\nggsave('Figures and Data/Fig3.pdf',Figure3,height=8.5, width=7.5, units=\"in\", dpi=300)\n\n```\n**Fig 3. Growth dynamics of antibiotic-resistant *P. aeruginosa*.** For each carbon source that supported growth on all five studied lineages, growth dynamics, including the maximum growth density (OD600) (A,D), growth rate (hr$^{-1}$) (B,E), and time to reach mid-exponential phase (hr) (C,F) were calculated. Significance determined by Wilcoxon rank sum test (&#42;&#42;&#42;P-value < 0.001; &#42;&#42;P-value < 0.01).\n\n```{r, echo=FALSE,results=TRUE, warning=FALSE, message=FALSE,fig.height=3, fig.width=2.5, fig.align='center'}\n# Generate and plot Figure 4 - need to replace with inter quartile...!\n\n# Figure 4 \nFigure4Bar <- growthDatGlcNAcDistribution %>% group_by(strain) %>% \n  ggplot(aes(strain, medianMaxOD600))+geom_col(aes(fill = strain))+\n  geom_errorbar(aes(ymin = IQ25, ymax = IQ75), width = 0.2)+\n  geom_signif(comparisons=list(c(\"Day0Anc\", \"Day20T4\"), c(\"Day0Anc\",\"nuoL\")), annotations=c(\"*\",\"*\"), tip_length = 0, y_position = c(0.12,0.14))+\n  facet_wrap(~media)+\n  ylab(\"Max Growth (OD600)\")+ylim(0,0.15)+\n  scale_fill_manual(values =c('grey','dodgerblue2','green2'),breaks=c(\"Day0Anc\",\"Day20T4\",\"nuoL\"),labels=c(\"Ancestor\",\"TOB*\",expression(paste(italic('nuoL'),' mutant')))) + \ntheme_bw()+theme(legend.position = 'none',strip.background = element_rect(fill='white'), axis.title.x = element_blank(), axis.text.x = element_text(angle=45, hjust=1))+\n  scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20T4\",\"nuoL\"),labels=c(\"Ancestor\",\"TOB*\",expression(paste(italic('nuoL'),' mutant'))))\n\n# Plot and save figure 4\nFigure4Bar\n\nggsave('Figures and Data/Fig4.pdf',plot=Figure4Bar, height=3, width=2.5, units=\"in\",dpi=600)\n\n```\n**Fig 4. Tobramycin-resistant PA14 exhibits enhanced growth on N-Acetyl-D Glucosamine.** A tobramycin-resistant PA14 lineage containing a mutation in the *nuo*L gene (blue) and a *nuoL* transposon mutant (green) grown on 20mM of N-acetyl-D-glucosamine relative to the unevolved ancestor (grey).TOB&#42; denotes that the tobramycin-evolved lineage is independent from the TOB lineage presented in the carbon source utilization screen (n = 4 colonies, error = interquartile range.\n\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE, fig.height = 5, fig.width = 7.5, fig.align='center'}\n# Figure 5\n# Generate, arrange, plot, and save figure 5\n\n# Figure 5 Top (in vitro)\nFig5_top <- biologPipStats %>% group_by(strain) %>% mutate(growth = AUCsum>=growthCutoff) %>% \n  ggplot(aes(carbonSource, strain, fill = growth)) + geom_tile(color = 'black',size=0.25) + \n  theme(legend.position = 'right') + xlab(\"\")+ylab(\"\") + theme_bw() + \n  theme(axis.text.x.top = element_text(size=8, angle=90, hjust=0,vjust=0.5), legend.position = 'right',legend.key=element_rect(color='grey',size=0.5), plot.margin=unit(c(0,0.2,-0.1,-0.325),'cm')) + \n  scale_x_discrete(position = \"top\")+\n  scale_y_discrete(breaks=c(\"Day20P1\", \"Day0Anc\"),\n        labels=c(\"PIP\",\"Ancestor\"))+\n  scale_fill_manual(values = c('white', 'grey50'), labels = c('No Growth    ', 'Growth'))+\n  guides(fill = guide_legend(title=expression(italic('in vitro'))))\n\n\n# Figure 5 Bottom (in silico)\nFig5_bottom <- essentialityPredictionsMutated %>% \n  ggplot(aes(carbonSource, geneName, fill = isEssential,label=isEssential,color=isEssential)) + geom_tile(color = 'black',size = 0.25) + \n  geom_point(size = 0, stroke = 0) +\n  geom_text(hjust=0.5,show.legend=FALSE)+\n  xlab(\"\")+ylab(\"\") + theme_bw()  +\n  guides(colour = guide_legend(title= expression(italic('in silico')),override.aes = list(shape = c('x', \" \"),size=5)))+\n  scale_color_manual(breaks=c(\"x\",\"\"),labels=c(\"Essential\",\"Not Essential\"),values=c('black','black'))+\n  scale_fill_manual(values=c(\"white\",\"white\"), guide=FALSE)+\n  theme(axis.text.y = element_text(size = 8, face ='italic'),axis.text.x = element_blank(), legend.position = 'right',legend.key=element_rect(color='grey',size=0.5), axis.ticks.x = element_blank())\n\n# Get locus tag to add to bottom panel\ndf <- droplevels(essentialityPredictionsMutated)\ndf <- df  %>% select(geneName, gene) %>%  unique()%>% arrange(geneName)\n# df$geneName <- factor(df$geneName, levels=df[order(df$gene,df$geneName)])\ngeneNames <- df %>%\n  ungroup() %>%\n  select(gene) %>%\n  unique() %>%\n  ggplot() +\n  geom_rect(aes(ymin = 0, ymax = 17,xmin = 0, xmax = 1),fill='white')+\n  geom_text(aes(x=c(0.25),y=c((1:unique(length(gene)))*0.575-0.45),label=gene,hjust=0),size=3,color='grey30')+\n  theme(axis.line.x=element_line(color='white'),axis.title.x=element_blank(),axis.title.y=element_blank(),axis.ticks=element_blank(),axis.line.y=element_line(color='white'),legend.position='none', axis.text.x=element_blank(),axis.text.y=element_blank())\n\nlegend_5T <- get_legend(Fig5_top)\nlegend_5B <- get_legend(Fig5_bottom)\n\ngrid.arrange(Fig5_bottom+theme(legend.position = 'none'), Fig5_top+theme(legend.position = 'none'),legend_5T,legend_5B,geneNames, ncol = 3, nrow = 4, widths= c(18,75,17), heights = c(40, 15,20,20), layout_matrix=cbind(c(5,5,5,5),c(2,1,1,1), c(NA,3,4,NA)))\n\nFigure5 <- arrangeGrob(Fig5_bottom+theme(legend.position = 'none'), Fig5_top+theme(legend.position = 'none'),legend_5T,legend_5B,geneNames, ncol = 3, nrow = 4, widths= c(18,75,17), heights = c(40, 15,20,20), layout_matrix=cbind(c(5,5,5,5),c(2,1,1,1), c(NA,3,4,NA)))\n\nggsave('Figures and Data/Fig5.pdf',Figure5,dpi=300)\n```\n**Fig 5. Model-guided prediction of loss of metabolic function in piperacillin-evolved *P. aeruginosa*.** Experimental growth calls of the piperacillin-evolved and ancestral lineages on carbon sources able to support growth on the base iPau1129 model (top). Model predicted genes essential for growth on minimal media with each carbon source (bottom). Only the subset of essential genes that were found to be deleted in the piperacillin-evolved lineage are included (*In vitro*: white = no growth, grey = growth; *in silico*: X = essential gene, blank = non-essential gene).\n\n\n```{r, echo=FALSE, warning=FALSE, results=TRUE, message=FALSE, fig.height = 5.5, fig.width = 6, fig.align='center'}\n# Generate and Plot Figure 6\n\n# Figure 6A-B (png file)\nFig6AB <- readPNG('Fig6ab.png')\nFig6AB <- rasterGrob(Fig6AB)\n\n# Figure 6CD :\n Fig6C2 <- ancP1gnyADistribution %>% \n  group_by(strain, media) %>%\n  ggplot(aes(strain, medianMaxOD600))+\n  geom_col(aes(fill = strain))+\n  geom_errorbar(aes(ymin = IQ25, ymax = IQ75), width = 0.2)+\n  geom_signif(comparisons=list(c(\"Day0Anc\", \"Day20P1\"), c(\"Day0Anc\",\"gnyA\")), annotations=c(\"*\",\"*\"), tip_length = 0, y_position = c(0.055,0.062))+\n  facet_wrap(~media)+theme_bw()+theme(legend.position = 'none', strip.background = element_rect(fill = 'white'),axis.text.x = element_text(angle = 45, hjust = 1),axis.title.x = element_blank())+\n  scale_fill_manual(values = c('grey','red', 'orange'),breaks=c(\"Day0Anc\",\"Day20P1\", \"gnyA\"),labels=c('Ancestor','PIP',expression(paste(italic('gnyA'),' mutant'))))+\n ylab(\"Max Growth (OD600)\")+ylim(-0.001,0.065)+\n  scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20P1\",\"gnyA\"),\n        labels=c(\"Ancestor\", \"PIP\", expression(paste(italic('gnyA'),' mutant'))))\n \n \n # Figure 6D Bar Graph \nFig6D2 <- ancP1scoABDistribution %>% \n  group_by(strain, media) %>% \n  ggplot(aes(strain, medianMaxOD600))+\n  geom_col(aes(fill = strain))+\n  geom_errorbar(aes(ymin = IQ25, ymax = IQ75), width = 0.2)+\n  geom_signif(comparisons=list(c(\"Day0Anc\", \"Day20P1\")), annotations=c(\"*\"), tip_length = 0, y_position = c(0.375))+\n  facet_wrap(~media)+\n  scale_y_continuous(limits = c(-0.01,0.4))+\n  scale_fill_manual(values=c('grey','red','goldenrod1','darkorange1'), breaks = c(\"Day0Anc\",\"Day20P1\",\"scoA\",\"scoB\"), labels=c('Ancestor','PIP',expression(paste(italic('scoA'),' mutant')), expression(paste(italic('scoB'),' mutant'))))+\n ylab(\"Max Growth (OD600)\")+\n  theme_bw()+\n  theme(legend.position = 'none', strip.background = element_rect(fill='white'), axis.text.x = element_text(angle = 45, hjust = 1), axis.title.x=element_blank())+\n  scale_x_discrete(breaks = c(\"Day0Anc\",\"Day20P1\",\"scoA\",\"scoB\"), labels=c('Ancestor','PIP',expression(paste(italic('scoA'),' mutant')), expression(paste(italic('scoB'),' mutant'))))\n\n\n# Arrange Figure 6\n  Fig6 <- arrangeGrob(Fig6AB, Fig6C2, Fig6D2, ncol=2, nrow =2, widths=c(3.5, 2.5),layout_matrix=rbind(c(1,2),c(1,3)))\n\n Figure6 <- as_ggplot(Fig6) +                                # transform to a ggplot\n  draw_plot_label(label = c(\"A\",\"B\",\"C\",\"D\"), size = 15,\n                  x = c(0, 0.23,0.6,0.6), y = c(1, 1,1,0.5))\n Figure6\n \n ggsave('Figures and Data/Fig6.pdf',Figure6,dpi=300)\n \n # output values\nancP1gnyADistribution\nancP1gnyAGrowth %>% \n  group_by(strain, media) %>%\n  filter(media == 'L-Leucine', strain != 'blank', AUCmedian == max(AUCmedian)) \n\nancP1scoABDistribution\nancP1scoABGrowth %>% \n  group_by(strain, media) %>% \n  filter(strain != 'blank', AUCmedian == max(AUCmedian))\n```\n**Fig 6. Experimental validation of model-guided gene essentiality predictions.** Pathways of L-Leucine (A) and 4-hydroxybenzoic acid (B) catabolism according to the GENRE of *P. aeruginosa*, iPau1129. Genes that were shown to be deleted in the piperacillin-evolved lineage are labelled in red. Dashed lines indicate connections to other pathways in the reconstruction. (C) Median growth of the ancestral lineage (grey), piperacillin-evolved lineage (red), and a *gnyA* transposon mutant on L-Leucine. (D) Median growth of the ancestral lineage (grey), piperacillin-evolved lineage (red), and *scoA* (solid orange) and *scoB* (dashed orange) transposon mutants on 4-hydroxybenzoic acid. Negative control (black) shows the OD600 of uninoculated media (n = 4 colonies, error = interquartile range).\n\n\n```{r, echo=FALSE,results=TRUE, warning=FALSE, message=FALSE, fig.height = 3, fig.width = 7, fig.align='center'}\n# Figure 7 - Hocquet Isolates on L-Leucine\n# Calculated with new method\n\nFig7Dat <- hocquetGrowthRepDistribution\nFig7Dat\n\nFig7A <- Fig7Dat %>%  \n  filter(family == 'A') %>% \n  ggplot(aes(strain, medianMaxOD600))+\n  geom_col(aes(fill = strain))+\n  geom_errorbar(aes(ymin = IQ25, ymax = IQ75), width = 0.2)+\n  geom_signif(comparisons=list(c(\"AWT\",\"APM\")), annotations = c('*'), tip_length = 0, y_position = c(0.055))+\n  theme_bw()+theme(legend.position = 'none',strip.text = element_blank(), strip.background = element_blank(),legend.text.align=0,axis.text.x = element_text(angle = 45, hjust = 1),axis.title.x = element_blank())+\n  scale_fill_manual(values = c('grey30','orange'),breaks=c(\"AWT\",\"APM\"))+\n ylab(\"Max Growth (OD600)\")+ylim(-0.001,0.06)+\n  scale_x_discrete(breaks=c(\"AWT\",\"APM\"))\n\nFig7B <- Fig7Dat %>% \n  filter(family == 'B') %>% \n  ggplot(aes(strain, medianMaxOD600))+\n  geom_col(aes(fill = strain))+\n  geom_errorbar(aes(ymin = IQ25, ymax = IQ75), width = 0.2)+\n  geom_signif(comparisons=list(c(\"BWT\",\"BPM\")), annotations = c('*'), tip_length = 0, y_position = c(0.055))+\n  theme_bw()+theme(legend.position = 'none',strip.text = element_blank(), strip.background = element_blank(),legend.text.align=0,axis.text.x = element_text(angle = 45, hjust = 1),axis.title.x = element_blank())+\n  scale_fill_manual(values = c('grey30','orange'),breaks=c(\"BWT\",\"BPM\"))+\n ylab(\"Max Growth (OD600)\")+ylim(-0.001,0.06)+\n  scale_x_discrete(breaks=c( \"BWT\",\"BPM\"))\n\nFig7C <- Fig7Dat %>% \n  filter(family == 'C') %>% \n  ggplot(aes(strain, medianMaxOD600))+\n  geom_col(aes(fill = strain))+\n  geom_errorbar(aes(ymin = IQ25, ymax = IQ75), width = 0.2)+\n  geom_signif(comparisons=list(c(\"CWT\",\"CPM\")), annotations = c('*'), tip_length = 0, y_position = c(0.055))+\n  theme_bw()+theme(legend.position = 'none',strip.text = element_blank(), strip.background = element_blank(),legend.text.align=0,axis.text.x = element_text(angle = 45, hjust = 1),axis.title.x = element_blank())+\n  scale_fill_manual(values = c('grey30','orange'),breaks=c(\"CWT\",\"CPM\"))+\n ylab(\"Max Growth (OD600)\")+ylim(-0.001,0.06)+\n  scale_x_discrete(breaks=c(\"CWT\",\"CPM\"))\n\nFig7D <- Fig7Dat %>% \n  filter(family == 'D') %>% \n  ggplot(aes(strain, medianMaxOD600))+\n  geom_col(aes(fill = strain))+\n  geom_errorbar(aes(ymin = IQ25, ymax = IQ75), width = 0.2)+\n  geom_signif(comparisons=list(c(\"DWT\",\"DPM\")), annotations = c('*'), tip_length = 0, y_position = c(0.055))+\n  theme_bw()+theme(legend.position = 'none',strip.text = element_blank(), strip.background = element_blank(),legend.text.align=0,axis.text.x = element_text(angle = 45, hjust = 1),axis.title.x = element_blank())+\n  scale_fill_manual(values = c('grey30','orange'),breaks=c(\"DWT\",\"DPM\"))+\n ylab(\"Max Growth (OD600)\")+ylim(-0.001,0.06)+\n  scale_x_discrete(breaks=c(\"DWT\",\"DPM\"))\n\n# Arrange FIgure 7\n  Fig7 <- arrangeGrob(Fig7A, Fig7B, Fig7C, Fig7D, ncol=4, nrow =1, widths=c(1.75,1.75,1.75,1.75),layout_matrix=rbind(c(1,2,3,4)))\n\n Figure7 <- as_ggplot(Fig7) +                                # transform to a ggplot\n  draw_plot_label(label = c(\"A\",\"B\",\"C\",\"D\"), size = 15,\n                  x = c(0,0.25,0.5,0.75), y = c(1, 1,1,1))\n Figure7\n \n ggsave('Figures and Data/Fig7.pdf',Figure7,dpi=300)\n\n\n```\n\n** Fig 7. Clinical isolates with large deletions exhibit loss of catabolic function similar to piperacillin-evolved *P. aeruginosa*.** Median maximum growth of clinical isolates from (Hocquet et al., 2016) with large chromosomal deletions (PM) and paired parental wild type (WT) isolates without large deletions in L-leucine. Growth was measured on four isolate pairs: (A) AWT and APM, (B) BWT and BPM, (C) CWT and CPM, and (D) DWT and DPM.  Significance determined by Wilcoxon rank sum test (P-value < 0.05). Error bars show the interquartile range of four replicate colonies. \n\n## **Supplemental Figures and Data**\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\n# S1 Data - adjusted for median\n\nwrite_csv(biologAllStats,'Figures and Data/S1_Data.csv')\n\n```\n\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\n# S2 Data - adjusted for median\n\nData_S2 <- biologAllStats %>% \n  ungroup() %>% group_by(strain,carbonSource) %>% \n  summarize(Area_Under_Curve = sum(AUCmedian)) %>% \n  mutate(Growth = Area_Under_Curve>=growthCutoff)\n  \n\nwrite_csv(Data_S2,'Figures and Data/S2_Data.csv')\n\n```\n\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\n# S3 Data - adjusted for median\nS3Data <- biologAllGrowthDynamics %>% select(-maxOD600)\nwrite_csv(S3Data,'Figures and Data/S3_Data.csv')\n\n```\n\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\n# S4 Data \n\nData_S4 <- essentialityPredictionsRaw %>% \n  filter(gene != 'Unassigned', gene != 'SPONTANEOUS', gene != 'unassigned')\n\nwrite_csv(Data_S4,'Figures and Data/S4_Data.csv')\n\n```\n\n\n```{r, echo=FALSE, fig.align='center', fig.height=8.5, fig.width=7.5, message=FALSE, warning=FALSE}\n# Figure S1 - adjusted for median\n\n# Had to remove hyphens in order to get the titles in the facet to fit correctly.\nlabel_wrap_gen2 <- function(width = 15) {\n    function(variable, value) {\n      lapply(strwrap(gsub(\"-\",' ',as.character(value)), width=width, simplify=FALSE), \n            paste, collapse=\"\\n\")\n    }\n}\n\n# Figure S1 A - Plate PM1\nFigureS1A <- biologAllStats %>% \n  group_by(strain, carbonSource) %>% \n  filter(plate =='PM1') %>% \n  ggplot(aes(timePoint,AUCmedian)) + geom_line(aes(color=strain))+\n  facet_wrap(~carbonSource,10,10,labeller=label_wrap_gen2())+\n  scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"),labels=c(\"Ancestor\",\"LBE\",\"CIP\",\"PIP\",\"TOB\"))+xlab('Time (hr)')+ ylab(\"Growth (OD600)\")+\n  theme_bw()+\n  theme(legend.title=element_blank(),legend.position=\"top\",legend.direction = \"horizontal\", strip.text=element_text(size=5.5), axis.text = element_text(size=7)) \n\n# Figure S1 B - Plate PM2a\nFigureS1B <- biologAllStats %>% \n  group_by(strain, carbonSource) %>% \n  filter(plate =='PM2') %>% \n  ggplot(aes(timePoint,AUCmedian)) + geom_line(aes(color=strain))+\n  facet_wrap(~carbonSource,10,10,labeller=label_wrap_gen2())+\n  scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"),labels=c(\"Ancestor\",\"LBE\",\"CIP\",\"PIP\",\"TOB\"))+xlab('Time (hr)')+ ylab(\"Growth (OD600)\")+\n  theme_bw()+\n  theme(legend.title=element_blank(),legend.position=\"top\",legend.direction = \"horizontal\", strip.text=element_text(size=5.5), axis.text = element_text(size=7)) \n\n\nFigureS1A <- as_ggplot(arrangeGrob(FigureS1A)) +                                # transform to a ggplot\n  draw_plot_label(label = c(\"A\"), size = 12,\n                  x = c(0), y = c(1))\nFigureS1A\n\nggsave('Figures and Data/S1A_Fig.tiff', FigureS1A,dpi=300)\n\nFigureS1B <- as_ggplot(arrangeGrob(FigureS1B)) +                                # transform to a ggplot\n  draw_plot_label(label = c(\"B\"), size = 12,\n                  x = c(0), y = c(1))\nFigureS1B\n\nggsave('Figures and Data/S1B_Fig.tiff', FigureS1B,dpi=300)\n\n\n\n```\n\n**S1 Fig. Growth curves of all lineages on all carbon sources.** Median 48-hour growth curves of the five lineages (ancestral, LB-evolved, CIP-evolved, PIP-evolved, TOB-evolved) on 190 carbon sources. (A) Growth on carbon sources from Phenotypic Microarray Plate PM1. (B) Growth on carbon sources from Phenotypic Microarray Plate PM2a. Each curve represents the average of three biological replicates. Growth is measured as the OD600 - background, where the background was an inoculated well containing media with no carbon source.\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.height=8.5, fig.width=7.5, fig.align='center'}\n# Figure S2 - adjusted for median\nFigureS2Dat <- biologAllStats\nFigureS2Dat$carbonSource <- factor(FigureS2Dat$carbonSource, levels = rev(unique(FigureS2Dat$carbonSource)),ordered=TRUE)\n\n# Figure S2 A - Plate PM1\nFigureS2A <- FigureS2Dat %>% \n  ungroup() %>% group_by(strain,carbonSource) %>% \n  filter(plate == 'PM1') %>% \n  summarize(sumAUC = sum(AUCmedian)) %>% \n  ggplot(aes(x=strain, y=carbonSource)) +\n  geom_tile(aes(fill = sumAUC), color='white')+\n  theme(axis.text.y = element_text(size=5), legend.position=\"top\",legend.title=element_blank()) +\n  xlab(\"\")+ylab(\"\")+theme_bw() +\n  scale_fill_gradient(low = \"white\", high = \"black\")+\n  scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n        labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))+\n  guides(fill = guide_colorbar(title.hjust = 0.5, title = 'AUC'))\n\n# Figure S2 B - Plate PM2\nFigureS2B <- FigureS2Dat %>% \n  ungroup() %>% group_by(strain,carbonSource) %>% \n  filter(plate == 'PM2') %>% \n  summarize(sumAUC = sum(AUCmedian)) %>% \n  ggplot(aes(x=strain, y=carbonSource)) +\n  geom_tile(aes(fill = sumAUC), color='white')+\n  theme(axis.text.y = element_text(size=5), legend.position=\"top\",legend.title=element_blank()) +\n  xlab(\"\")+ylab(\"\")+theme_bw() +\n  scale_fill_gradient(low = \"white\", high = \"black\")+\n  scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n        labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))+\n  guides(fill = guide_colorbar(title.hjust = 0.5, title = 'AUC'))\n\nFigureS2A <- as_ggplot(arrangeGrob(FigureS2A)) +                                # transform to a ggplot\n  draw_plot_label(label = c(\"A\"), size = 12,\n                  x = c(0), y = c(1))\n\nFigureS2B <- as_ggplot(arrangeGrob(FigureS2B)) +                                # transform to a ggplot\n  draw_plot_label(label = c(\"B\"), size = 12,\n                  x = c(0), y = c(1))\nFigureS2A\nFigureS2B\n\nggsave('Figures and Data/S2A_Fig.tiff', FigureS2A,dpi=300)\n\nggsave('Figures and Data/S2B_Fig.tiff', FigureS2B,dpi=300)\n\n```\n**S2 Fig. Area under the curve (AUC) on all carbon sources by lineage.** The total median AUC for each lineage on 190 carbon sources where the AUC = sum(growth curve - background). (A) Phenotypic Microarray Plate PM1. (B) Phenotypic Microarray Plate PM2a. The growth curves and backgrounds were averaged across three biological replicates. A lineage was considered to have grown on a given carbon source if the AUC was in the upper quantile.\n\n```{r, echo=FALSE, warning=TRUE, message=FALSE,fig.height=5, fig.width=7.5, fig.align='center'}\n# Supplmentary Figure 3\n# A) Growth curves of TOB lineages on NAG - median technical replicates\nFigS3A <- S3_fig_growth %>% \n  ggplot(aes(timeTidy, AUC))+\n  geom_ribbon(aes(ymin=IQ25, ymax=IQ75,fill = wellID),alpha = 0.75, show.legend=FALSE) +geom_line(aes(color = wellID), size = 1)+\n  facet_wrap(~media)+theme_bw()+theme(legend.position = 'right',legend.title = element_blank(), strip.background = element_rect(fill = 'white'),legend.text.align=0,legend.text = element_text(size=8))+\n  scale_y_continuous(limits = c(-0.005, 0.15))+\n  scale_colour_manual(values = c('grey','lightblue','turquoise1','blue3','dodgerblue','dodgerblue3','black'),breaks=c( \"Ancestor\",\"TOB-R1\",\"TOB-R2\",\"TOB-R3\",\"TOB-R4\",\"TOB-R4 2\",\"Negative Control\"))+\n  scale_fill_manual(values = c('grey85','lightcyan','paleturquoise1','lightblue','lightskyblue','lightskyblue','grey50'))+\n  xlab('Time (hr)') +ylab(\"Growth (OD600)\")\n\n# B) Growth curves of data from Figure 4\nFigS3B <- growthDatGlcNAc %>% \n  ggplot(aes(x=timeTidy, y = AUCmedian))+\n  geom_ribbon(aes(ymin = IQ25, ymax = IQ75, fill = strain),alpha = 0.75, show.legend=FALSE)+\n  geom_line(aes(color = strain),size=1)+\n  facet_wrap(~carbonSource)+\n  xlab('Time (hr)') +ylab(\"Growth (OD600)\")+ xlim(0,49)+ylim(-0.005,0.15)+\n  scale_colour_manual(values =c('grey','dodgerblue2','green2','black'),breaks=c(\"Day0Anc\",\"Day20T4\",\"nuoL\",\"blank\"),labels=c(\"Ancestor\",\"TOB*\",expression(paste(italic('nuoL'),' mutant')),\"Negative Control\")) + \n  scale_fill_manual(values = c('grey85','lightblue2','palegreen1','grey50'),breaks=c(\"Day0Anc\",\"Day20T4\",\"nuoL\",\"blank\")) +theme_bw()+theme(legend.title = element_blank(), legend.text.align = 0, legend.text=element_text(size=8),strip.background = element_rect(fill='white'))\n\nFig3C <- S4_fig_growth %>% \n  ggplot(aes(timeTidy, AUC))+\n  geom_ribbon(aes(ymin=IQ25, ymax=IQ75,fill = wellID),alpha = 0.75, show.legend=FALSE) +geom_line(aes(color = wellID), size = 1)+\n  facet_wrap(~media)+theme_bw()+theme(legend.position = 'right',legend.title = element_blank(), strip.background = element_rect(fill = 'white'),legend.text.align=0,legend.text = element_text(size=8))+\n  scale_y_continuous(limits = c(-0.005, 0.1))+\n  scale_colour_manual(values = c('grey','grey60','grey50','green2','green3','lightgreen','black'))+\n  scale_fill_manual(values = c('grey95','grey90','grey85','palegreen1','palegreen2','darkseagreen1','grey50'))+\n  xlab('Time (hr)') +ylab(\"Growth (OD600)\")\n\nFigS3 <- arrangeGrob(FigS3A, FigS3B,Fig3C,  ncol=4, nrow =2, widths=c(1.875, 1.875,1.875, 1.875), heights=c(2.5,2.5),layout_matrix=rbind(c(1,1,2,2),c(3,3,3,NA)))\n\n FigureS3 <- as_ggplot(FigS3) +                                # transform to a ggplot\n  draw_plot_label(label = c(\"A\",\"B\",\"C\"), size = 15,\n                  x = c(0, 0.5,0), y = c(1, 1,0.5))\n \nFigureS3\n\nggsave('Figures and Data/S3_Fig.tiff', FigureS3,height = 5, width = 7.5,units='in',dpi=300)\n\n  \n\n```\n\n**S3 Fig. Growth curves of tobramycin-evolved P. aeruginosa and a nuoL transposon mutant on N-acetyl-D-glucosamine.** (A) Growth of all four independently evolved lineages on 20mM N-acetyl-D-glucosamine. Lineages were previously evolved as described in the Methods. TOB-R3 was used for the Biolog plate analysis (TOB, n = 1 isolate). TOB-R4 contains a mutation in the *nuoL* gene and was used in Fig 4 (TOB&#42, n = 2 isolates plotted independently). TOB-R1 and TOB-R2 were not used in this study (n = 1 isolate each). Growth of the ancestral lineage was also measured (n = 1 isolate) (error (shading around line) = standard deviation of seven technical replicates for each isolates).  (B) 48-hour growth curves of the ancestor (grey), TOB&#42 (blue), and a transposon mutant with an insertion in the *nuoL* gene (green) (n = 4 colonies, error (shaded region) = interquartile range). (C) Growth *P. aeruginosa* on N-acetyl-D-glucosamine treated with an electron transport chain inhibitor. The ancestral lineage and a *nuoL* transposon mutant were grown on N-acetyl-D-glucosamine with 12.5μM of the electron transport chain inhibitor CCCP and 0.125% DMSO. As controls, each strain was grown in 0μM CCCP with 0% DMSO and 0μM CCCP with 0.125% DMSO (n = 1 colony of each strain, error = standard deviation across 10 technical replicates for each colony). The negative control (black) contains media that was not inoculated.\n\n```{r, echo=FALSE, fig.align='center', fig.height=4, fig.width=7, message=FALSE, warning=FALSE}\n# # S4 Fig Plot - median technical replicates\n# FigureS4 <- S4_fig_growth %>% \n#   ggplot(aes(timeTidy, AUC))+\n#   geom_ribbon(aes(ymin=IQ25, ymax=IQ75,fill = wellID),alpha = 0.75, show.legend=FALSE) +geom_line(aes(color = wellID), size = 1)+\n#   facet_wrap(~media)+theme_bw()+theme(legend.position = 'right',legend.title = element_blank(), strip.background = element_rect(fill = 'white'),legend.text.align=0,legend.text = element_text(size=8))+\n#   scale_y_continuous(limits = c(-0.005, 0.1))+\n#   scale_colour_manual(values = c('grey','grey60','grey50','green2','green3','lightgreen','black'))+\n#   scale_fill_manual(values = c('grey95','grey90','grey85','palegreen1','palegreen2','darkseagreen1','grey50'))+\n#   xlab('Time (hr)') +ylab(\"Growth (OD600)\")\n# \n# FigureS4\n# \n# ggsave('Figures and Data/S4_Fig.tiff', FigureS4,height = 4, width = 7,units='in',dpi=300)\n# \n\n```\n\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE, fig.height = 8.5, fig.width = 7.5, fig.align='center'}\n# Figure S4 - adjusted for median\n\nFigS4_top <- biologPipStats %>% mutate(growth = AUCsum>=growthCutoff) %>% \n  ggplot(aes(carbonSource, strain, fill = growth)) + geom_tile(color = 'grey') + \n  theme(legend.position = 'none') + xlab(\"\")+ylab(\"\") + theme_bw() + \n  theme(axis.text.x.top = element_text(size=8, angle=90, hjust=0), axis.text.y = element_text(size = 10), legend.position = 'none') + \n  scale_x_discrete(position = \"top\")+\n  scale_fill_manual(values = c('white', 'grey40'), labels = c('No Growth', 'Growth'))+\n  scale_y_discrete(breaks=c(\"Day20P1\", \"Day0Anc\"),\n        labels=c(\"PIP\",\"Ancestor\"))\n\nessentialityPredictionsMutated <- left_join(PipRMutationsMutated, essentialityPredictions, 'gene')\nFigS4_bottom <- essentialityPredictionsMutated %>% mutate(isEssential = as.numeric(grRatio) <= 0.001) %>% \n  ggplot(aes(carbonSource, gene, fill = isEssential)) + geom_tile(color = 'grey') + \n   xlab(\"\")+ylab(\"\") + theme_bw()  +\n  theme(axis.text.y = element_text(size = 7),axis.text.x = element_blank(), legend.position = 'none') +\n  scale_fill_manual(labels = c(\"Not Essential\", \"Essential\"),values=c(\"white\",\"black\"))\n\ngrid.arrange( FigS4_top, FigS4_bottom, ncol = 1, nrow = 2, widths= c(100), heights = c(35, 100))\n\nFigureS4 <- arrangeGrob(FigS4_top, FigS4_bottom, ncol = 1, nrow = 2, widths= c(100), heights = c(35, 100))\n\nggsave('Figures and Data/S4_Fig.tiff', FigureS4,dpi=300)\n\n```\n**S4 Fig. Complete essentiality predictions in the PIP large deletion.** Expansion of Fig 5 that includes all genes that were deleted in the piperacillin-evolved lineage and are included in the iPau1129 GENRE (*In vitro*: white = no growth, grey = growth; *in silico*: black = essential gene, white = non-essential gene).\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE,fig.height=8, fig.width=4, fig.align='center'}\n\n# A) Growth of gnyA on L-leucine\nFigS6A <- ancP1gnyAGrowth %>% \n  filter(media == 'L-Leucine') %>% \n  group_by(strain) %>% \n  ggplot(aes(timeTidy, AUCmedian))+\n  geom_ribbon(aes(ymin=IQ25, ymax=IQ75,fill = strain),alpha = 0.75, show.legend=FALSE) +geom_line(aes(color = strain), size = 0.75)+\n  facet_wrap(~media)+theme_bw()+theme(legend.position = 'right',legend.title = element_blank(), strip.background = element_rect(fill = 'white'),legend.text.align=0,legend.text = element_text(size=8))+\n  scale_y_continuous(limits = c(-0.005, 0.05))+\n  scale_colour_manual(values = c('grey','red', 'orange','black'),breaks=c(\"Day0Anc\",\"Day20P1\", \"gnyA\",\"blank\"),labels=c('Ancestor','PIP',expression(paste(italic('gnyA'),' mutant')),'Negative Control'))+\n  scale_fill_manual(values = c('grey85','rosybrown2', 'khaki1','grey50'),breaks=c(\"Day0Anc\",\"Day20P1\", \"gnyA\",\"blank\"))+\n  xlab('Time (hr)') +ylab(\"Growth (OD600)\")\n\n# B) Growth of gnyA on L-isoleucine\nFigS6B <- S6_fig_growth %>% \n  mutate(media = 'L-Isoleucine') %>% \n  ggplot(aes(timeTidy, AUCmedian))+\n  geom_ribbon(aes(ymin=IQ25, ymax=IQ75,fill = strain),alpha = 0.75, show.legend=FALSE) +geom_line(aes(color = strain), size = 1)+\n  facet_wrap(~media)+theme_bw()+theme(legend.position = 'right',legend.title = element_blank(), strip.background = element_rect(fill = 'white'),legend.text.align=0,legend.text = element_text(size=8))+\n  scale_y_continuous(limits = c(-0.05, 0.25))+\n  scale_colour_manual(values = c('orange','black'),breaks=c( \"gnyA\",\"Negative Control\"),labels=c(expression(paste(italic('gnyA'),' mutant')),'Negative Control'))+\n  scale_fill_manual(values = c('khaki1','grey50'),breaks=c( \"gnyA\",\"blank\"))+\n  xlab('Time (hr)') +ylab(\"Growth (OD600)\")\n\n\n# C) Growth of scoA and scoB mutants on 4-HBA\nFigS6C <- ancP1scoABGrowth %>% \n  ggplot(aes(timeTidy, AUCmedian, group=strain)) +\n  geom_ribbon(aes(ymin=IQ25, ymax=IQ75,fill = strain),alpha = 0.75, show.legend=FALSE) +\n  geom_line(aes(color = strain, linetype=strain), size = 1)+\n  facet_wrap(~media)+\n  scale_y_continuous(limits = c(-0.05,0.35))+\n  scale_colour_manual(values=c('grey','red','goldenrod1','darkorange1','black'), breaks = c(\"Day0Anc\",\"Day20P1\",\"scoA\",\"scoB\",\"blank\"), labels=c('Ancestor','PIP',expression(paste(italic('scoA'),' mutant')), expression(paste(italic('scoB'),' mutant')), 'Negative Control'))+\n  scale_fill_manual(values=c('grey85','rosybrown2','lemonchiffon1','khaki1','grey50'), breaks=c(\"Day0Anc\",\"Day20P1\",\"scoA\",\"scoB\",\"blank\"))+\n  scale_linetype_manual(values=c('solid','solid','solid','dotdash','solid'), breaks = c(\"Day0Anc\",\"Day20P1\",\"scoA\",\"scoB\",\"blank\"), labels=c('Ancestor','PIP',expression(paste(italic('scoA'),' mutant')), expression(paste(italic('scoB'),' mutant')), 'Negative Control'))+\n  xlab('Time (hr)') + ylab(\"Growth (OD600)\")+\n  theme_bw()+\n  theme(legend.position = 'right', legend.title=element_blank(), strip.background = element_rect(fill='white'), legend.text.align=0, legend.text=element_text(size=8))\n\n# D) Growth of A, B, C, D clinical isolate pairs on 40mM L-leucine\n# Background subtracted median of 4 isolates with IQR at each timepoint\nFigS6D <- hocquetGrowth %>% group_by(strain) %>%  ggplot(aes(timeTidy, AUCmedian))+\n  geom_ribbon(aes(ymin = IQ25, ymax = IQ75, fill = strain), alpha = 0.75, show.legend = FALSE)+\n  geom_line(aes(color = strain, linetype = strain), size = 1)+\n  facet_wrap(~media)+\n  scale_y_continuous(limits = c(-0.005, 0.05))+\n  scale_colour_manual(values = c('grey30','orange','grey30','orange','grey30','orange','grey30','orange','black'), breaks = c(\"AWT\",\"APM\",\"BWT\",\"BPM\",\"CWT\",\"CPM\",\"DWT\",\"DPM\",\"Negative Control\"))+\n  scale_fill_manual(values = c('grey','khaki1','grey','khaki1','grey','khaki1','grey','khaki1','grey'), breaks = c(\"AWT\",\"APM\",\"BWT\",\"BPM\",\"CWT\",\"CPM\",\"DWT\",\"DPM\",\"Negative Control\"))+\n  scale_linetype_manual(values = c('solid','solid','dashed','dashed','dotted','dotted','dotdash','dotdash','solid'),breaks = c(\"AWT\",\"APM\",\"BWT\",\"BPM\",\"CWT\",\"CPM\",\"DWT\",\"DPM\",\"Negative Control\"))+\n  xlab('Time (hr)')+ylab('Growth (OD600)')+theme_bw()+theme(legend.position = 'right', legend.title=element_blank(), strip.background = element_rect(fill='white'), legend.text.align=0, legend.text=element_text(size=6))\n\n\n FigS6 <- arrangeGrob(FigS6A, FigS6B, FigS6C, FigS6D, ncol=1, nrow =4, heights=c(2, 2,2,2),layout_matrix=cbind(c(1,2,3,4)))\n\n FigureS6 <- as_ggplot(FigS6) +                                # transform to a ggplot\n  draw_plot_label(label = c(\"A\",\"B\",\"C\", \"D\"), size = 15,\n                  x = c(0, 0,0,0), y = c(1,0.75,0.50, 0.25))\n\nFigureS6\n\nggsave('Figures and Data/S5_Fig.tiff', FigureS6,dpi=300,height = 7.5, width = 4, units='in')\n```\n\n**S5 Fig. Expanded validation of model-guided gene essentiality predictions.** The median 48-hour growth (OD600) of the ancestral lineage (grey), piperacillin-evolved lineage (red), and a *gnyA* transposon mutant on 20mM of L-leucine (A) or L-isoleucine (B). (C) The median 48-hour growth (OD600) of the ancestral lineage (grey), piperacillin-evolved lineage (red), and *scoA* (solid orange) and *scoB* (dashed orange) transposon mutants on 4-hydroxybenzoic acid. (n = 4 isolates for L-leucine and 4-HBA and 6 isolates for L-isoleucine, error (shaded region) = interquartile range, negative control (black) = uninoculated media).\n\n\n\n**S6 Fig. Verification of a transposon insertion in the *nuoL* gene via PCR.** The ancestral lineage (top), had a PCR product between 0.5-1kb while the *nuoL* transposon mutant (bottom) had a product between 1-2kb.\n\n```{r, echo=FALSE,results=TRUE, warning=FALSE, message=FALSE, fig.align='center'}\n# S7 Fig -> correlation between AUC and the maximum optical density\n\n# Calculate pearson correlation for complete dataset\nFigureS8DatAll <- biologAllStats %>% \n  ungroup() %>% group_by(strain,carbonSource) %>% \n  summarize(maxOD600 = max(AUCmedian), AUCsum = sum(AUCmedian)) %>%\n  ungroup() \n\n# Old\n# FigureS8Dat <- FigureS8DatAll %>% \n#   select(-strain, -carbonSource)\n# pearsonCor <- cor(FigureS8Dat, method = 'pearson')\n# labelsCor <- data.frame(x = 70, y = 0.1, label = paste(\"italic(r)==\", round(pearsonCor[2],digits=3)))\n# \n\n# New\nFigureS8DatAll <- inner_join(FigureS8DatAll, biologMedianMaxOD600)\nFigureS8Dat <- FigureS8DatAll %>% select(-maxOD600, -carbonSource,-strain, -plate)\npearsonCor <- cor(FigureS8Dat, method = 'pearson')\nlabelsCor <- data.frame(x = 70, y = 0.1, label = paste(\"italic(r)==\", round(pearsonCor[2],digits=3)))\n\n# # Plot Correlation Old\n# FigureS8 <- FigureS8DatAll %>% \n#   ggplot(aes(x=AUCsum, y = maxOD600))+\n#   geom_point(size=1.25, aes(color = strain))+\n#   geom_vline(xintercept=c(growthCutoff), linetype=\"dotted\", size=1.25)+\n#   scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"), labels = c('Ancestor','LBE', 'CIP','PIP','TOB'))+\n#   theme_bw()+ theme(legend.title = element_blank())+\n#   xlab(\"Area Under the Curve \\n (AUC)\")+ylab('Max Growth (OD600)')+\n#   geom_text(data = labelsCor, aes(x = x, y = y,\n#                         label = label), parse = TRUE)\n# FigureS8\n\n# Plot correlation New\nFigureS8 <- FigureS8DatAll %>% \n  ggplot(aes(x=AUCsum, y = medianMaxOD600))+\n  geom_point(size=1.25, aes(color = strain))+\n  geom_vline(xintercept=c(growthCutoff), linetype=\"dotted\", size=1.25)+\n  scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"), labels = c('Ancestor','LBE', 'CIP','PIP','TOB'))+\n  theme_bw()+ theme(legend.title = element_blank())+\n  xlab(\"Area Under the Curve \\n (AUC)\")+ylab('Max Growth (OD600)')+\n  geom_text(data = labelsCor, aes(x = x, y = y,\n                        label = label), parse = TRUE)\nFigureS8\nggsave('Figures and Data/S7_Fig.tiff', FigureS8,dpi=300,height = 3, width = 5, units='in')\n```\n**S7 Fig. Correlation between maximum optical density and the area under the curve.** The median area under the curve (AUC) and median maximum OD600 for each lineage grown on each carbon source. Dashed horizontal line denotes the AUC growth cutoff. The Pearson coefficient was 0.943.\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE, fig.align='center', fig.height=8.5, fig.width=7.5}\n# Figure S8 - Figure 3 with the AUC cutoffs chosen in the sensitivity analysis\n\n# Generate the plots for each AUC shift\nplotList <- list()\ncount = 1\nfor (sensitivityRange in c(-0.5, -0.25, -0.1, 0.1, 0.25, 0.5)){\n  \n# Set the new growth cutoff\ngrowthCutoffFinal = growthCutoff * (1 + sensitivityRange)\n\n# Growth stats with tested cutoff\nbiologAllGrowthFinal <- biologAllStats %>%\n  group_by(strain,carbonSource) %>% \n  mutate(AUCsum = sum(AUCmedian)) %>% #changed this to median\n  filter(AUCsum>=growthCutoffFinal) %>% \n  ungroup() %>% group_by(carbonSource,timePoint) %>% \n  mutate(numStrains=n()) %>% \n  filter(numStrains==5) %>% \n  ungroup() %>% group_by(strain, carbonSource) %>% \n  summarise(maxOD600=max(AUCmedian))\n\n#Join these carbon sources with growth dynamics (growth rate and lag phase) to filter down their data frames\nbiologAllGrowthDynamicsFinal <- inner_join(biologAllGrowthFinal, biologGrowthDynamicsStats)\nbiologAllGrowthDynamicsFinal <- inner_join(biologAllGrowthDynamicsFinal, biologMedianMaxOD600)\nbiologAllGrowthDynamicsFinal$carbonSource <- factor(biologAllGrowthDynamicsFinal$carbonSource, levels = rev(unique(biologAllGrowthDynamicsFinal$carbonSource)),ordered = TRUE)\n\n# Plot final growth dynamics for each sensitivity range tried (new MaxOD600)\nmaxOD_plot <- biologAllGrowthDynamicsFinal %>%\n  ggplot(aes(x=strain, y = medianMaxOD600))+\n  geom_boxplot(aes(color = strain), size=1) +\n  scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"),labels=c(\"Ancestor\",\"LBE\",\"CIP\",\"PIP\",\"TOB\"))+\n  theme_bw()+\n  theme(axis.text.y = element_text(size=6), axis.title.y=element_text(size=6),axis.title.x=element_blank(),legend.position=\"bottom\",legend.title=element_blank(), axis.text.x = element_blank(), title = element_text(size = 8))+ylim(0,0.575)+ylab('Max Growth (OD600)') + ggtitle(paste(sensitivityRange*100,'%'))\n\nGR_plot <- biologAllGrowthDynamicsFinal %>%\n  ggplot(aes(x=strain, y = medianGrowthRate))+\n  geom_boxplot(aes(color = strain), size=1)+\n  scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"))+\n  theme_bw()+\n  theme(axis.text.y = element_text(size=6), axis.title.y=element_text(size=6),legend.position=\"none\", axis.text.x = element_blank(),axis.title.x=element_blank(), title = element_text(size = 8))+ylab('Growth Rate (ln(OD600)/hr)')+ylim(0,0.525)+\nggtitle(paste(sensitivityRange*100,'%'))\n\n\nLP_plot <- biologAllGrowthDynamicsFinal %>%\n  ggplot(aes(x=strain, y = medianLagPhase))+\n  geom_boxplot(aes(color = strain), size=1)+\n  scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"))+\n  theme_bw()+ scale_y_log10(limits=c(NA,100)) +\n  theme(axis.text.y = element_text(size=6), axis.title.y=element_text(size=6),legend.position=\"none\", axis.text.x = element_blank(),axis.title.x=element_blank(), title = element_text(size = 8))+ylab(\"Time to Mid-Exponential (hr)\")+\nggtitle(paste(sensitivityRange*100,'%'))\n\nplotList[[count]] <-  maxOD_plot\nplotList[[count + 1]] <- GR_plot\nplotList[[count + 2]] <- LP_plot\ncount = count + 3\n}\n\nmaxOD_minus50 <- plotList[[1]]\nGR_minus50 <- plotList[[2]]\nLP_minus50 <- plotList[[3]]\nmaxOD_minus25 <- plotList[[4]]\nGR_minus25 <- plotList[[5]]\nLP_minus25 <- plotList[[6]]\nmaxOD_minus10 <- plotList[[7]]\nGR_minus10 <- plotList[[8]]\nLP_minus10 <- plotList[[9]]\nmaxOD_10 <- plotList[[10]]\nGR_10 <- plotList[[11]]\nLP_10 <- plotList[[12]]\nmaxOD_25 <- plotList[[13]]\nGR_25 <- plotList[[14]]\nLP_25 <- plotList[[15]]\nmaxOD_50 <- plotList[[16]]\nGR_50 <- plotList[[17]]\nLP_50 <- plotList[[18]]\nlegendS9 <- get_legend(plotList[[16]])\n# Arrange the figure\nFigS9 <- arrangeGrob( maxOD_minus50+theme(legend.position='none'), GR_minus50, LP_minus50, maxOD_minus25+theme(legend.position='none'), GR_minus25, LP_minus25, maxOD_minus10+theme(legend.position='none'), GR_minus10, LP_minus10, maxOD_10+theme(legend.position='none'), GR_10, LP_10, maxOD_25+theme(legend.position='none'), GR_25, LP_25, maxOD_50+theme(legend.position='none'), GR_50, LP_50,legendS9, Fig3D+theme(axis.text.y=element_text(size=6), axis.title.y=element_text(size=6),title = element_text(size = 6),legend.position='none', axis.text.x=element_blank(), axis.title.x=element_blank())+ggtitle(paste('cutoff =',round(growthCutoff,digits=3))), Fig3E+ggtitle(paste('cutoff =',round(growthCutoff, digits=3)))+theme(axis.text.y=element_text(size=6), axis.title.y=element_text(size=6),title = element_text(size = 6),axis.title.x=element_blank(), axis.text.x=element_blank()), Fig3F+ggtitle(paste('cutoff =',round(growthCutoff,digits=3)))+theme(axis.text.y=element_text(size=6), axis.title.y=element_text(size=6),axis.title.x=element_blank(), axis.text.x = element_blank(),title = element_text(size = 6)), ncol=7, nrow =4, layout_matrix=cbind(c(1,2,3,NA),c(4,5,6,NA), c(7,8,9,19),c(20,21,22,19),c(10,11,12,19),c(13,14,15,NA),c(16,17,18,NA)), heights=c(10,10,10,2))\n\n FigureS9 <- as_ggplot(FigS9)\n \n FigureS9\n ggsave('Figures and Data/S8_Fig.tiff', FigureS9,dpi=300,height = 8.5, width = 7.5, units='in')\n \n```\n**S8 Fig. The effect of varying the AUC growth cutoff value on growth dynamics.** The growth cutoff was increased or decreased by 10%, 25%, and 50%. Growth curves exceeding each cutoff were included in the calculation of the maximum growth density (top row), growth rate (middle row), and time to mid-exponential phase (bottom row).  The calculated growth dynamics with the initial AUC cutoff are shown in the middle column.  \n\n\n```{r, echo=FALSE,results=TRUE, warning=FALSE, message=FALSE, fig.align='center', height=7, width=7}\n# # Supplentary Figure 10 -> Sensitivity Analysis of AUC Growth Cutoff Value\n# \n# # Calcuclate sensitivity coefficients \n# sensitivityOutput <- data.frame(matrix(ncol=5, nrow=0))\n# colnames(sensitivityOutput) <- c(\"strain\",\"S_GR\",\"S_LP\",\"S_maxOD600\",\"sensitivityRange\")\n# \n# for (sensitivityRange in c(-0.5, -0.25, -0.1, 0.1, 0.25, 0.5)){\n# # Perform Sensitivity Analysis\n# growthCutoffFinal = growthCutoff * (1 + sensitivityRange)\n# \n# # Growth stats with tested cutoff\n# biologAllGrowthFinal <- biologAllStats %>%\n#   group_by(strain,carbonSource) %>% \n#   mutate(AUCsum = sum(AUCmedian)) %>% #changed this to median\n#   filter(AUCsum>=growthCutoffFinal) %>% \n#   ungroup() %>% group_by(carbonSource,timePoint) %>% \n#   mutate(numStrains=n()) %>% \n#   filter(numStrains==5) %>% \n#   ungroup() %>% group_by(strain, carbonSource) %>% \n#   summarise(maxOD600=max(AUCmedian))\n# \n# #Join these carbon sources with growth dynamics (growth rate and lag phase) to filter down their data frames\n# biologAllGrowthDynamicsFinal <- inner_join(biologAllGrowthFinal, biologGrowthDynamicsStats)\n# biologAllGrowthDynamicsFinal$carbonSource <- factor(biologAllGrowthDynamicsFinal$carbonSource, levels = rev(unique(biologAllGrowthDynamicsFinal$carbonSource)),ordered = TRUE)\n# \n# # Calculate Medians for initial and final growth cutoffs\n# initStat <- biologAllGrowthDynamics %>% group_by(strain) %>% summarise(GRo = median(medianGrowthRate), LPo = median(medianLagPhase), maxOD600o = median(maxOD600))\n# finalStat <- biologAllGrowthDynamicsFinal %>% group_by(strain) %>% summarise(GRf = median(medianGrowthRate), LPf = median(medianLagPhase), maxOD600f = median(maxOD600))\n# \n# # Merge into one data frame and subtract final - initial\n# sensitivityDF <- merge(initStat, finalStat, by = \"strain\")\n# sensitivityDF <- sensitivityDF %>% mutate(GRfo = GRf - GRo, LPfo = LPf - LPo, maxOD600fo = maxOD600f - maxOD600o, growthCutoff, growthCutoffFinal, growthCutofffo = growthCutoffFinal - growthCutoff)\n# sensitivityDF\n# \n# # Calculate sensitivity coefficients (growth cutoff initial/growth dynamic initial) * (growth dynamic final - initial/growth cutoff final - initial)\n# sensitivityCoeff <- sensitivityDF %>%group_by(strain) %>% \n#   summarise(S_GR = (growthCutoff/GRo)*(GRfo/growthCutofffo),  S_LP = (growthCutoff/LPo)*(LPfo/growthCutofffo),S_maxOD = (growthCutoff/maxOD600o)*(maxOD600fo/growthCutofffo), sensitivityRange)\n# sensitivityOutput <- rbind(sensitivityOutput, sensitivityCoeff)\n# \n# # # Plot Upper and Lower growth dynamics (e.g. +-10%) for each sensitivity range tried\n# # print(biologAllGrowthDynamicsFinal %>% \n# #   ggplot(aes(x=strain, y = maxOD600))+\n# #   geom_boxplot(aes(color = strain), size=1.25) + \n# #   scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"),labels=c(\"Ancestor\",\"LBE\",\"CIP\",\"PIP\",\"TOB\"))+\n# #   theme_bw()+\n# #   theme(axis.text.y = element_text(size=10), axis.title.y=element_text(size=12),legend.position=\"bottom\",legend.title=element_blank(), axis.text.x = element_blank())+xlab(\"\")+ylim(0,0.575)+ylab('Max Growth (OD600)'))\n# # \n# # # Figure 3E\n# # print(biologAllGrowthDynamicsFinal %>% \n# #   ggplot(aes(x=strain, y = medianGrowthRate))+\n# #   geom_boxplot(aes(color = strain), size=1.25)+\n# #   scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"))+\n# #   theme_bw()+\n# #   theme(axis.text.y = element_text(size=10), axis.title.y=element_text(size=12),legend.position=\"none\", axis.text.x = element_blank())+xlab(\"\")+ylab('Growth Rate (ln(OD600)/hr)')+ylim(0,0.525))\n# # \n# # \n# # # Figure 3F\n# # print(biologAllGrowthDynamicsFinal %>% \n# #   ggplot(aes(x=strain, y = medianLagPhase))+\n# #   geom_boxplot(aes(color = strain), size=1.25)+\n# #   scale_colour_manual(values = c('grey','black','gold2','red','dodgerblue2'),breaks=c(\"Day0Anc\",'Day20C2',\"Day20F4\",\"Day20P1\",\"Day20T3\"))+\n# #   theme_bw()+ scale_y_log10(limits=c(NA,100)) + \n# #   theme(axis.text.y = element_text(size=10), axis.title.y=element_text(size=12),legend.position=\"none\", axis.text.x = element_blank())+xlab(\"\")+ylab(\"Time to Mid-Exponential (hr)\"))\n# }\n# \n# # Plot sensitivity coefficients\n# sensitivityOutput\n# sensitivityOutput <- sensitivityOutput %>% mutate(percentChangeGC = sensitivityRange*100)\n# sensitivityOutput$percentChangeGC <- factor(sensitivityOutput$percentChangeGC, levels=c(-50, -25,-10,10,25,50))\n# \n# FigureS10A <- sensitivityOutput %>% ggplot(aes(strain,S_maxOD))+\n#   geom_bar(aes(fill = percentChangeGC), position = 'dodge', stat = 'identity')+\n#   ylim(-1,1)+ ylab('Max Growth \\n Sensitivity Coefficient')+\n#   theme_bw()+ theme(axis.title.x = element_blank())+\n#   guides(fill = guide_legend(title='Change in AUC Cutoff (%)'))+\n#   scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n#         labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))\n# FigureS10B <- sensitivityOutput %>% ggplot(aes(strain,S_GR))+\n#   geom_bar(aes(fill = percentChangeGC), position = 'dodge', stat = 'identity')+\n#   ylim(-1,1)+ylab('Growth Rate \\n Sensitivity Coefficient')+\n#   theme_bw()+theme(legend.position='none',axis.title.x = element_blank())+scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n#         labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))\n# FigureS10C <- sensitivityLP <- sensitivityOutput %>% ggplot(aes(strain,S_LP))+\n#   geom_bar(aes(fill = percentChangeGC), position = 'dodge', stat = 'identity')+\n#   ylim(-1,1)+ ylab('Time to Mid Exponential \\n Sensitivity Coefficient')+\n#   theme_bw()+theme(legend.position='none', axis.title.x = element_blank())+scale_x_discrete(breaks=c(\"Day0Anc\",\"Day20C2\",\"Day20F4\",\"Day20P1\",\"Day20T3\"),\n#         labels=c(\"Ancestor\", \"LBE\", \"CIP\",\"PIP\",\"TOB\"))\n# \n# FigureS10Legend <- get_legend(FigureS10A)\n# \n# # Arrange the panels:\n# FigS10 <- arrangeGrob(FigureS10A+theme(legend.position='none'), FigureS10B, FigureS10C, FigureS10Legend, ncol=2, nrow =2, layout_matrix=cbind(c(1,3),c(2,4)))\n# \n#  FigureS10 <- as_ggplot(FigS10) +                                # transform to a ggplot\n#   draw_plot_label(label = c(\"A\", \"B\", \"C\"), size = 15,\n#                   x = c(0, 0.5, 0), y = c(1, 1,0.5))\n#  \n#  FigureS10\n# \n# # output <- matrix(ncol = 2, nrow = 141)\n# # for(cutoff in c(-30:110)){\n# #   pearsonCutoff <- FigureS8Dat %>% filter(AUCsum >= cutoff)\n# #     corCutoff <- cor(pearsonCutoff, method = 'pearson')\n# #     output[cutoff+31,1] <- corCutoff[2]\n# #     output[cutoff+31,2] <- cutoff}\n# # output <- data.frame(output)\n# # output %>% ggplot(aes(X2, X1))+geom_point()+geom_vline(xintercept=c(growthCutoff),linetype='dotted',size=1)\n# \n#   \n# ggsave('Figures and Data/S10_Fig.tiff', FigureS10,dpi=300,height = 7, width = 7, units='in')\n ```\n\n### Generate S1_Raw Data for S1 Code ###\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\nS1_RawData <- biologAllTidy %>% spread(timePoint,OD600) %>% filter(carbonSource %in% unique(biologAllGrowth$carbonSource)) \nS1_RawData$strain <- factor(S1_RawData$strain, levels = c('Day0Anc','Day20P1','Day20F4','Day20T3','Day20C2'), labels = c('Ancestor','PIP','CIP','TOB','LBE'))\nS1_RawData <- S1_RawData %>% ungroup() %>%group_by(strain, carbonSource) %>% mutate(replicate = 1:n(), wellNames = paste(strain,'-', carbonSource,'- Replicate', replicate)) %>% arrange(strain,carbonSource)\n\n# Uncomment below and set path to regenerate this file\n# write_csv(S1_RawData,'../S1_code/S1_RawData.csv')\n```\n\n### Supplementary Text: Statistical Tests ###\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\n#Statistical tests:\n# Figure 2C: Wilcox Rank Sum test for box plot\nAncPip_2C <- Fig2CDat %>% filter(strain == 'Day0Anc' | strain == 'Day20P1')\nAncPip_2C$strain <-  factor(AncPip_2C$strain, levels = rev(unique(AncPip_2C$strain)),ordered=TRUE)\nresAncPipMaxGrowth_2C <- wilcox.test(medianMaxOD600 ~ strain, data = AncPip_2C, exact = FALSE)\n\nAncCip_2C <- Fig2CDat %>% filter(strain == 'Day0Anc' | strain == 'Day20F4')\nAncCip_2C$strain <-  factor(AncCip_2C$strain, levels = rev(unique(AncCip_2C$strain)),ordered=TRUE)\nresAncCipMaxGrowth_2C <- wilcox.test(medianMaxOD600 ~ strain, data = AncCip_2C, exact = FALSE)\n\nAncTob_2C <- Fig2CDat %>% filter(strain == 'Day0Anc' | strain == 'Day20T3')\nAncTob_2C$strain <-  factor(AncTob_2C$strain, levels = rev(unique(AncTob_2C$strain)),ordered=TRUE)\nresAncTobMaxGrowth_2C <- wilcox.test(medianMaxOD600 ~ strain, data = AncTob_2C, exact = FALSE)\n\nAncCtrl_2C <- Fig2CDat %>% filter(strain == 'Day0Anc' | strain == 'Day20C2')\nAncCtrl_2C$strain <-  factor(AncCtrl_2C$strain, levels = rev(unique(AncCtrl_2C$strain)),ordered=TRUE)\nresAncCtrlMaxGrowth_2C <- wilcox.test(medianMaxOD600 ~ strain, data = AncCtrl_2C, exact = FALSE)\n\n# Figure 3: Wilcox Rank Sum test for box plots. Significance level = 0.05\nAncPip <- biologAllGrowthDynamics %>% filter(strain == 'Day0Anc' | strain =='Day20P1')\nAncPip$strain <-  factor(AncPip$strain, levels = rev(unique(AncPip$strain)),ordered=TRUE)\nresAncPipMaxGrowth <- wilcox.test(medianMaxOD600 ~ strain, data = AncPip, exact = FALSE)\nresAncPipGrowthRate <- wilcox.test(medianGrowthRate ~ strain, data = AncPip, exact = FALSE)\nresAncPipLagPhase <- wilcox.test(medianLagPhase ~ strain, data = AncPip, exact = FALSE)\n\nAncCtrl <- biologAllGrowthDynamics %>% filter(strain == 'Day0Anc' | strain =='Day20C2')\nAncCtrl$strain <-  factor(AncCtrl$strain, levels = rev(unique(AncCtrl$strain)),ordered=TRUE)\nresAncCtrlMaxGrowth <- wilcox.test(medianMaxOD600 ~ strain, data = AncCtrl, exact = FALSE)\nresAncCtrlGrowthRate <- wilcox.test(medianGrowthRate ~ strain, data = AncCtrl, exact = FALSE)\nresAncCtrlLagPhase <- wilcox.test(medianLagPhase ~ strain, data = AncCtrl, exact = FALSE)\n\nAncTob <- biologAllGrowthDynamics %>% filter(strain == 'Day0Anc' | strain =='Day20T3')\nAncTob$strain <-  factor(AncTob$strain, levels = rev(unique(AncTob$strain)),ordered=TRUE)\nresAncTobMaxGrowth <- wilcox.test(medianMaxOD600 ~ strain, data = AncTob, exact = FALSE)\nresAncTobGrowthRate <- wilcox.test(medianGrowthRate ~ strain, data = AncTob, exact = FALSE)\nresAncTobLagPhase <- wilcox.test(medianLagPhase ~ strain, data = AncTob, exact = FALSE)\n\nAncCip <- biologAllGrowthDynamics %>% filter(strain == 'Day0Anc' | strain =='Day20F4')\nAncCip$strain <-  factor(AncCip$strain, levels = rev(unique(AncCip$strain)),ordered=TRUE)\nresAncCipMaxGrowth <- wilcox.test(medianMaxOD600 ~ strain, data = AncCip, exact = FALSE)\nresAncCipGrowthRate <- wilcox.test(medianGrowthRate ~ strain, data = AncCip, exact = FALSE)\nresAncCipLagPhase <- wilcox.test(medianLagPhase ~ strain, data = AncCip, exact = FALSE)\n\n# Figure 4 Max Growth Stats\nAncTobStar <- growthDatGlcNAcMaximums %>% filter(strain == 'Day0Anc'|strain =='Day20T4')\nAncTobStar$strain <- factor(AncTobStar$strain, levels = rev(unique(AncTobStar$strain)), ordered = TRUE)\nresAncTobStarMaxGrowth <- wilcox.test(maxOD600 ~ strain, data = AncTobStar, exact = FALSE)\n\nAncNuoL <- growthDatGlcNAcMaximums %>% filter(strain == 'Day0Anc'|strain =='nuoL')\nAncNuoL$strain <- factor(AncNuoL$strain, levels = rev(unique(AncNuoL$strain)), ordered = TRUE)\nresAncNuoLMaxGrowth <- wilcox.test(maxOD600 ~ strain, data = AncNuoL, exact = FALSE)\n\n# Figure 6C\nAncPip_6C <- ancP1gnyAMaximums %>% filter(strain == 'Day0Anc'|strain == 'Day20P1')\nAncPip_6C$strain <- factor(AncPip_6C$strain, levels = rev(unique(AncPip_6C$strain)), ordered = TRUE)\nresAncPip_6C <- wilcox.test(maxOD600 ~ strain, data = AncPip_6C, exact = FALSE)\n\nAncGnyA_6C <- ancP1gnyAMaximums %>% filter(strain == 'Day0Anc'|strain =='gnyA')\nAncGnyA_6C$strain <- factor(AncGnyA_6C$strain, levels = rev(unique(AncGnyA_6C$strain)), ordered = TRUE)\nresAncGnyA_6C <- wilcox.test(maxOD600 ~ strain, data = AncGnyA_6C, exact = FALSE)\n\n# Figure 6D\nAncPip_6D <- ancP1scoABMaximums %>% filter(strain == 'Day0Anc'|strain == 'Day20P1')\nAncPip_6D$strain <- factor(AncPip_6D$strain, levels = rev(unique(AncPip_6D$strain)), ordered = TRUE)\nresAncPip_6D <- wilcox.test(maxOD600 ~ strain, data = AncPip_6D, exact = FALSE)\n\n\nAncScoA_6D <- ancP1scoABMaximums %>% filter(strain == 'Day0Anc'|strain == 'scoA')\nAncScoA_6D$strain <- factor(AncScoA_6D$strain, levels = rev(unique(AncScoA_6D$strain)), ordered = TRUE)\nresAncScoA_6D <- wilcox.test(maxOD600 ~ strain, data = AncScoA_6D, exact = FALSE)\n\nAncScoB_6D <- ancP1scoABMaximums %>% filter(strain == 'Day0Anc'|strain == 'scoB')\nAncScoB_6D$strain <- factor(AncScoB_6D$strain, levels = rev(unique(AncScoB_6D$strain)), ordered = TRUE)\nresAncScoB_6D <- wilcox.test(maxOD600 ~ strain, data = AncScoB_6D, exact = FALSE)\n\n# Figure 7\nAWT_APM <- hocquetGrowthRepMaximums %>% filter(strain == 'AWT'|strain == 'APM')\nAWT_APM$strain <- factor(AWT_APM$strain, levels = rev(unique(AWT_APM$strain)), ordered = TRUE)\nres_AWT_APM <- wilcox.test(maxOD600 ~ strain, data = AWT_APM, exact = FALSE)\n\nBWT_BPM <- hocquetGrowthRepMaximums %>% filter(strain == 'BWT'|strain == 'BPM')\nBWT_BPM$strain <- factor(BWT_BPM$strain, levels = rev(unique(BWT_BPM$strain)), ordered = TRUE)\nres_BWT_BPM <- wilcox.test(maxOD600 ~ strain, data = BWT_BPM, exact = FALSE)\n\n\nCWT_CPM <- hocquetGrowthRepMaximums %>% filter(strain == 'CWT'|strain == 'CPM')\nCWT_CPM$strain <- factor(CWT_CPM$strain, levels = rev(unique(CWT_CPM$strain)), ordered = TRUE)\nres_CWT_CPM <- wilcox.test(maxOD600 ~ strain, data = CWT_CPM, exact = FALSE)\n\n\nDWT_DPM <- hocquetGrowthRepMaximums %>% filter(strain == 'DWT'|strain == 'DPM')\nDWT_DPM$strain <- factor(DWT_DPM$strain, levels = rev(unique(DWT_DPM$strain)), ordered = TRUE)\nres_DWT_DPM <- wilcox.test(maxOD600 ~ strain, data = DWT_DPM, exact = FALSE)\n\n\nhocquetGrowthRepMaximums\n\n```\n\nFigure 2C Statistics:\nMaximum Growth (OD600):\n  1. Ancestor vs LBE\n  2. Ancestor vs CIP\n  3. Ancestor vs PIP\n  4. Ancestor vs TOB\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=TRUE}\np2C <-  c(resAncCtrlMaxGrowth_2C$p.value,resAncCipMaxGrowth_2C$p.value,resAncPipMaxGrowth_2C$p.value,resAncTobMaxGrowth_2C$p.value)\np2C\n\n```\n\nFigure 3D Statistics\nMaximum Growth (OD600)\n  1. Ancestor vs LBE\n  2. Ancestor vs CIP\n  3. Ancestor vs PIP\n  4. Ancestor vs TOB\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=TRUE}\np3D <-  c(resAncCtrlMaxGrowth$p.value, resAncCipMaxGrowth$p.value, resAncPipMaxGrowth$p.value,resAncTobMaxGrowth$p.value )\np3D\n```\n\nFigure 3E Statistics\nGrowth Rate\n  1. Ancestor vs LBE\n  2. Ancestor vs CIP\n  3. Ancestor vs PIP\n  4. Ancestor vs TOB\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=TRUE}\np3E <- c(resAncCtrlGrowthRate$p.value, resAncCipGrowthRate$p.value, resAncPipGrowthRate$p.value, resAncTobGrowthRate$p.value)\np3E\n```\n\nFigure 3F Statistics\nTime to Mid-Exponential Phase\n  1. Ancestor vs LBE\n  2. Ancestor vs CIP\n  3. Ancestor vs PIP\n  4. Ancestor vs TOB\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=TRUE}\np3F <- c(resAncCtrlLagPhase$p.value, resAncCipLagPhase$p.value,resAncPipLagPhase$p.value,resAncTobLagPhase$p.value)\np3F\n```\n\nFigure 4 Statistics\nMaximum Growth (OD600)\nAncestor vs TOB-R4\nAncestor vs *nuoL*\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=TRUE}\np4 <- c(resAncTobStarMaxGrowth$p.value, resAncNuoLMaxGrowth$p.value)\np4\n```\n\nFigure 6C Statistics\nMaximum Growth (OD600)\nAncestor vs PIP\nAncestor vs *gnyA*\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=TRUE}\np6C <- c(resAncPip_6C$p.value, resAncGnyA_6C$p.value)\np6C\n```\n\nFigure 6D Statisitics \nMaximum Growth (OD600)\nAncestor vs PIP\nAncestor vs *scoA*\nAncestor vs *scoB*\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=TRUE}\np6D <- c(resAncPip_6D$p.value,resAncScoA_6D$p.value,resAncScoB_6D$p.value)\np6D\n```\n\nFigure 7 Statisitics \nMaximum Growth (OD600)\nAWT vs APM;\nBWT vs BPM;\nCWT vs CPM;\nDWT vs DPM;\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=TRUE}\np7 <- c(res_AWT_APM$p.value, res_BWT_BPM$p.value, res_CWT_CPM$p.value, res_DWT_DPM$p.value)\np7\n```\n\n",
    "created" : 1529594495526.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2268376195",
    "id" : "9353DF8F",
    "lastKnownWriteTime" : 1530895522,
    "last_content_update" : 1530895522640,
    "path" : "~/UVa Work for New Laptop/Papin Lab/Biolog/Biolog Replicates/biolog data complete/Cell Systems/Supplement/S1_Code/S1B_Code/allFigures.Rmd",
    "project_path" : "allFigures.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}